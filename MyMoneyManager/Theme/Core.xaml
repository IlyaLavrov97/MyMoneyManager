<ResourceDictionary x:Class="DarkOrange.Core"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  Button  -->
    <Style TargetType="Button">
        <Setter Property="TextOptions.TextHintingMode" Value="Animated" />
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="Background" Value="{StaticResource ControlBackgroundNormal}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusLine}" />
        <Setter Property="BorderThickness" Value="{StaticResource BorderThicknessButton}" />
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
        <Setter Property="Padding" Value="{StaticResource MarginContentButton}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.2" />
                                    <VisualTransition To="Pressed" />
                                    <VisualTransition From="Pressed" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="PressedElement"
                                                         Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                         To="0" />
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="MouseOverElement"
                                                         Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="NormalElement"
                                                         Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                         To="0.25" />
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="PressedElement"
                                                         Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                         To="1" />
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="MouseOverElement"
                                                         Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                         To="0" />
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="BorderVisual"
                                                         Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                         To="0" />
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="BorderPressed"
                                                         Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="NormalElement"
                                                         Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                         To="0" />
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="DisabledElement"
                                                         Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                         To="1" />
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="HighlightElement"
                                                         Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                         To="0.5" />
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="ContentHost"
                                                         Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                         To="0.75" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="DisabledElement"
                                Background="{StaticResource DisabledBrush}"
                                CornerRadius="2"
                                Opacity="0">
                            <Border BorderBrush="{StaticResource DisabledBorderBrush}"
                                    BorderThickness="0,0,1,1"
                                    CornerRadius="2" />
                        </Border>
                        <Border x:Name="BorderVisual"
                                Background="Transparent"
                                BorderBrush="{StaticResource BorderBrushVisual}"
                                BorderThickness="{StaticResource ThicknessButtonVisual}"
                                CornerRadius="4" />
                        <Border x:Name="BorderPressed"
                                Background="Transparent"
                                BorderBrush="{StaticResource ControlPressedVisualBrush}"
                                BorderThickness="{StaticResource ThicknessButtonVisual}"
                                CornerRadius="4"
                                Opacity="0" />
                        <Border x:Name="NormalElement"
                                Margin="{StaticResource MarginBorderButton}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2"
                                Effect="{StaticResource ControlShadowEffect}" />
                        <Border x:Name="MouseOverElement"
                                Margin="{StaticResource MarginBorderButtonOver}"
                                Background="{StaticResource ControlBackgroundOver}"
                                BorderBrush="{StaticResource ControlActiveBorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2"
                                Opacity="0" />
                        <Border x:Name="PressedElement"
                                Margin="{StaticResource MarginBorderButton}"
                                Background="{StaticResource ControlBackgroundPressed}"
                                BorderBrush="{StaticResource ControlActiveBorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2"
                                Opacity="0" />
                        <Border x:Name="HighlightElement"
                                BorderBrush="{StaticResource ControlHighlight}"
                                BorderThickness="{StaticResource BorderThicknessButtonOutline}"
                                CornerRadius="2" />
                        <ContentPresenter x:Name="ContentHost"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter.Effect>
                                <DropShadowEffect BlurRadius="1"
                                                  Direction="-90"
                                                  Opacity="0.5"
                                                  ShadowDepth="1"
                                                  Color="{StaticResource ColorForegroundShadowColor}" />
                            </ContentPresenter.Effect>
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ToggleButton  -->
    <Style TargetType="ToggleButton">
        <Setter Property="TextOptions.TextHintingMode" Value="Animated" />
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="Background" Value="{StaticResource ControlBackgroundNormal}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusLine}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                    <VisualTransition To="Pressed" />
                                    <VisualTransition From="Pressed" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="MouseOverElement"
                                                         Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="NormalElement"
                                                         Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                         To="0" />
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="DisabledElement"
                                                         Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                         To="1" />
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="HighlightElement"
                                                         Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                         To="0.5" />
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="ContentHost"
                                                         Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                         To="0.75" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="NormalElement"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="0" />
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="HighlightElement"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="0" />
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="CheckedElement"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="1" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="FocusVisualElement"
                                                         Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="DisabledElement"
                                Background="{StaticResource DisabledBrush}"
                                CornerRadius="2"
                                Opacity="0">
                            <Border BorderBrush="{StaticResource DisabledBorderBrush}"
                                    BorderThickness="0,0,1,1"
                                    CornerRadius="2" />
                        </Border>
                        <Border x:Name="NormalElement"
                                Background="{StaticResource ControlBackgroundNormal}"
                                CornerRadius="2"
                                Effect="{StaticResource ControlShadowEffect}" />
                        <Border x:Name="CheckedElement"
                                Margin="0,-1,0,-1"
                                Background="{StaticResource ToggleButtonChecked}"
                                BorderBrush="#D0494a4d"
                                BorderThickness="1"
                                CornerRadius="2.5"
                                Opacity="0">
                            <Border BorderBrush="#70303030"
                                    BorderThickness="1,1,0,0"
                                    CornerRadius="2">
                                <Border BorderBrush="#30303030"
                                        BorderThickness="1"
                                        CornerRadius="1.5">
                                    <Border BorderBrush="#10303030"
                                            BorderThickness="1,1,0,0"
                                            CornerRadius="1" />
                                </Border>
                            </Border>
                        </Border>
                        <Border x:Name="MouseOverElement"
                                Background="{StaticResource ControlBackgroundLine}"
                                CornerRadius="2"
                                Opacity="0" />
                        <Border x:Name="HighlightElement"
                                BorderBrush="{StaticResource ControlHighlight}"
                                BorderThickness="{StaticResource BorderThicknessButtonOutline}"
                                CornerRadius="2" />
                        <ContentPresenter x:Name="ContentHost"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter.Effect>
                                <DropShadowEffect BlurRadius="1"
                                                  Direction="-90"
                                                  Opacity="0.5"
                                                  ShadowDepth="1"
                                                  Color="{StaticResource ColorForegroundShadowColor}" />
                            </ContentPresenter.Effect>
                        </ContentPresenter>
                        <Rectangle x:Name="FocusVisualElement"
                                   Margin="0"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusX="1"
                                   RadiusY="1"
                                   Stroke="{StaticResource FocusVisualBrush}"
                                   StrokeThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ToggleButton - нестандартный стиль  -->
    <Style x:Key="ToggleButton_Occupado" TargetType="ToggleButton">
        <Setter Property="Background" Value="#FF1F3B53" />
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource ToggleButtonBorderBrush_forOccupado}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusLine_Occupado}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                         To=".4" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.2" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="path"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                         To="-180.709" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Visibility="Collapsed" />
                        <Ellipse Stroke="{TemplateBinding BorderBrush}" StrokeThickness="3" />
                        <Path Margin="3,3,3,37"
                              Cursor="Hand"
                              Data="M0.5,0.5 L68.5,0.5 C68.5,19.277683 53.277683,34.5 34.5,34.5 C15.722319,34.5 0.49999958,19.277683 0.5,0.5 z"
                              Fill="{StaticResource ToggleButtonBackgroundON_forOccupado}"
                              RenderTransformOrigin="0.5,0.5"
                              Stretch="Fill"
                              Stroke="{StaticResource ToggleButtonBorderBrushON_forOccupado}"
                              UseLayoutRounding="False">
                            <Path.RenderTransform>
                                <ScaleTransform ScaleY="-1" />
                            </Path.RenderTransform>
                        </Path>
                        <Path Margin="3,37,3,3"
                              Cursor="Hand"
                              Data="M0.5,0.5 L68.5,0.5 C68.5,19.277683 53.277683,34.5 34.5,34.5 C15.722319,34.5 0.49999958,19.277683 0.5,0.5 z"
                              Fill="{StaticResource ToggleButtonBackgroundOFF_forOccupado}"
                              Stretch="Fill"
                              Stroke="{StaticResource ToggleButtonBorderBrushOFF_forOccupado}"
                              UseLayoutRounding="False" />
                        <TextBlock Height="21"
                                   Margin="0,8,0,0"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Top"
                                   Cursor="Hand"
                                   FontSize="18.667"
                                   FontWeight="Bold"
                                   Foreground="{TemplateBinding Foreground}"
                                   Text="{StaticResource ToggleButtonGO}"
                                   TextWrapping="Wrap" />
                        <TextBlock Height="17"
                                   Margin="0,0,0,16"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Bottom"
                                   Cursor="Hand"
                                   FontSize="13.333"
                                   FontWeight="Bold"
                                   Foreground="{TemplateBinding Foreground}"
                                   Text="{StaticResource ToggleButtonSTOP}"
                                   TextWrapping="Wrap" />
                        <Path x:Name="path"
                              Margin="3,37,3,3"
                              Data="M0.5,0.5 L68.5,0.5 C68.5,19.277683 53.277683,34.5 34.5,34.5 C15.722319,34.5 0.49999958,19.277683 0.5,0.5 z"
                              Fill="{StaticResource ToggleButtonBackBackground_forOccupado}"
                              RenderTransformOrigin="0.5,-0.005"
                              Stretch="Fill"
                              Stroke="{StaticResource ToggleButtonBackBorderBrush_forOccupado}"
                              UseLayoutRounding="False">
                            <Path.RenderTransform>
                                <RotateTransform />
                            </Path.RenderTransform>
                        </Path>
                        <Ellipse Width="5"
                                 Height="5"
                                 Margin="35">
                            <Ellipse.Fill>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Offset="0" Color="#FF272727" />
                                    <GradientStop Offset="1" Color="#FF525252" />
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                            <Ellipse.Stroke>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Offset="1" Color="#FF353535" />
                                    <GradientStop Color="#FF1B1B1B" />
                                </LinearGradientBrush>
                            </Ellipse.Stroke>
                        </Ellipse>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  CheckBox  -->
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="{StaticResource ControlBackgroundNormal}" />
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Padding" Value="4,0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusLine_Occupado}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <ColorAnimation Duration="0:0:0.3"
                                            Storyboard.TargetName="background_checkbox"
                                            Storyboard.TargetProperty="(Rectangle.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                            To="{StaticResource BorderBrushGradientColor1}" />
                            <ColorAnimation Duration="0:0:0.3"
                                            Storyboard.TargetName="background_checkbox"
                                            Storyboard.TargetProperty="(Rectangle.Stroke).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                            To="{StaticResource BorderBrushGradientColor2}" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <ColorAnimation Duration="0:0:0.3"
                                            Storyboard.TargetName="background_checkbox"
                                            Storyboard.TargetProperty="(Rectangle.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                            To="{StaticResource BorderBrushSolidColor}" />
                            <ColorAnimation Duration="0:0:0.3"
                                            Storyboard.TargetName="background_checkbox"
                                            Storyboard.TargetProperty="(Rectangle.Stroke).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                            To="{StaticResource BorderBrushSolidColor}" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid Width="16" Height="16">
                                <Rectangle x:Name="background_checkbox"
                                           Width="14"
                                           Height="14"
                                           Fill="{TemplateBinding Background}"
                                           Stroke="{TemplateBinding BorderBrush}" />
                                <Path x:Name="check_icon"
                                      Width="11"
                                      Height="10"
                                      Data="M102.03442,598.79645 L105.22962,597.78918 L106.95686,599.19977 C106.95686,599.19977 113.77958,590.53656 113.77958,590.53656 C113.77958,590.53656 107.40649,603.79431 107.40649,603.79431 z"
                                      Fill="{StaticResource ControlBackgroundOver}"
                                      Opacity="0"
                                      Stretch="Fill" />
                                <Rectangle x:Name="background_null_checkbox"
                                           Width="7"
                                           Height="7"
                                           Fill="{StaticResource ControlBackgroundOver}"
                                           Opacity="0" />
                                <Rectangle x:Name="background_disabled_checkbox"
                                           Width="12"
                                           Height="12"
                                           Fill="{StaticResource DisabledBrush}"
                                           Opacity="0"
                                           Stroke="{StaticResource DisabledBorderBrush}"
                                           StrokeThickness="1" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="check_icon" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="background_null_checkbox" Property="Opacity" Value="1" />
                            <Setter Property="Opacity" Value="0.9" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="background_disabled_checkbox" Property="Opacity" Value="1" />
                            <Setter Property="Opacity" Value="0.72" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  RadioButton  -->
    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="{StaticResource ControlBackgroundNormal}" />
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusLine_Occupado}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Padding" Value="4 0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <ColorAnimation Duration="0:0:0.3"
                                            Storyboard.TargetName="background_radiobutton"
                                            Storyboard.TargetProperty="(Rectangle.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                            To="{StaticResource BorderBrushGradientColor1}" />
                            <ColorAnimation Duration="0:0:0.3"
                                            Storyboard.TargetName="background_radiobutton"
                                            Storyboard.TargetProperty="(Rectangle.Stroke).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                            To="{StaticResource BorderBrushGradientColor2}" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <ColorAnimation Duration="0:0:0.3"
                                            Storyboard.TargetName="background_radiobutton"
                                            Storyboard.TargetProperty="(Rectangle.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                            To="{StaticResource BorderBrushSolidColor}" />
                            <ColorAnimation Duration="0:0:0.3"
                                            Storyboard.TargetName="background_radiobutton"
                                            Storyboard.TargetProperty="(Rectangle.Stroke).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                            To="{StaticResource BorderBrushSolidColor}" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid Width="16" Height="16">
                                <Ellipse x:Name="background_radiobutton"
                                         Width="14"
                                         Height="14"
                                         Margin="1"
                                         Fill="{TemplateBinding Background}"
                                         Stroke="{TemplateBinding BorderBrush}"
                                         StrokeThickness="1" />
                                <Ellipse x:Name="bullet_checked_radiobutton"
                                         Width="8"
                                         Height="8"
                                         Fill="{StaticResource ControlBackgroundOver}"
                                         Opacity="0"
                                         Stroke="Transparent"
                                         StrokeThickness="1" />
                                <Ellipse x:Name="bullet_disabled_radiobutton"
                                         Width="12"
                                         Height="12"
                                         Fill="{StaticResource DisabledBrush}"
                                         Opacity="0"
                                         Stroke="{StaticResource DisabledBorderBrush}"
                                         StrokeThickness="1" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="bullet_checked_radiobutton" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="bullet_checked_radiobutton" Property="Opacity" Value="1" />
                            <Setter TargetName="bullet_checked_radiobutton" Property="Fill" Value="Transparent" />
                            <Setter TargetName="bullet_checked_radiobutton" Property="Stroke" Value="{StaticResource ControlBackgroundOver}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="bullet_disabled_radiobutton" Property="Opacity" Value="1" />
                            <Setter Property="Opacity" Value="0.72" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  TextBox  -->
    <Style BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{StaticResource ControlLightBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="CaretBrush" Value="{StaticResource ControlBackgroundOver}" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="Height" Value="34" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimation Duration="0:0:0.4"
                                             Storyboard.TargetName="txb_mouseOver1"
                                             Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                             To="1" />
                            <DoubleAnimation Duration="0:0:0"
                                             Storyboard.TargetName="txb_mouseOver2"
                                             Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                             To="1" />
                            <ColorAnimation Duration="0:0:0"
                                            Storyboard.TargetName="txb_border"
                                            Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                            To="Transparent" />
                            <ColorAnimation Duration="0:0:0"
                                            Storyboard.TargetName="txb_border"
                                            Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                            To="Transparent" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimation Duration="0:0:0.4"
                                             Storyboard.TargetName="txb_mouseOver1"
                                             Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                             To="0" />
                            <DoubleAnimation BeginTime="0:0:0.4"
                                             Duration="0:0:0"
                                             Storyboard.TargetName="txb_mouseOver2"
                                             Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                             To="0" />
                            <ColorAnimation BeginTime="0:0:0.4"
                                            Duration="0:0:0"
                                            Storyboard.TargetName="txb_border"
                                            Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                            To="{StaticResource BorderLightBrushGradientColor1}" />
                            <ColorAnimation BeginTime="0:0:0.4"
                                            Duration="0:0:0"
                                            Storyboard.TargetName="txb_border"
                                            Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                            To="{StaticResource BorderLightBrushGradientColor2}" />
                        </Storyboard>
                        <Storyboard x:Key="FocusOn">
                            <ColorAnimation Duration="0:0:0.4"
                                            Storyboard.TargetName="txb_border"
                                            Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                            To="{StaticResource BorderBrushGradientColor1}" />
                            <ColorAnimation Duration="0:0:0.4"
                                            Storyboard.TargetName="txb_border"
                                            Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                            To="{StaticResource BorderBrushGradientColor2}" />
                        </Storyboard>
                        <Storyboard x:Key="FocusOff">
                            <ColorAnimation Duration="0:0:0.4"
                                            Storyboard.TargetName="txb_border"
                                            Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                            To="{StaticResource BorderBrushSolidColor}" />
                            <ColorAnimation Duration="0:0:0.4"
                                            Storyboard.TargetName="txb_border"
                                            Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                            To="{StaticResource BorderBrushSolidColor}" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border x:Name="txb_mouseOver2"
                                Background="{TemplateBinding Background}"
                                CornerRadius="4"
                                Opacity="0" />
                        <Border x:Name="txb_mouseOver1"
                                Background="{StaticResource ControlBackgroundLine}"
                                CornerRadius="4"
                                Opacity="0" />
                        <Border x:Name="txb_border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="txb_border" Property="Background" Value="{StaticResource DisabledBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            <Setter Property="Opacity" Value="0.85" />
                            <Setter TargetName="txb_border" Property="BorderBrush" Value="{StaticResource DisabledBrush}" />
                            <Setter TargetName="txb_border" Property="BorderThickness" Value="1" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource FocusOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource FocusOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  PasswordBox  -->
    <Style BasedOn="{x:Null}" TargetType="{x:Type PasswordBox}">
        <Setter Property="Background" Value="{StaticResource ControlLightBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource ControlBackgroundOver}" />
        <Setter Property="CaretBrush" Value="{StaticResource ControlBackgroundOver}" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="Height" Value="34" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimation Duration="0:0:0.4"
                                             Storyboard.TargetName="txb_mouseOver1"
                                             Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                             To="1" />
                            <DoubleAnimation Duration="0:0:0"
                                             Storyboard.TargetName="txb_mouseOver2"
                                             Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                             To="1" />
                            <ColorAnimation Duration="0:0:0"
                                            Storyboard.TargetName="txb_border"
                                            Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                            To="Transparent" />
                            <ColorAnimation Duration="0:0:0"
                                            Storyboard.TargetName="txb_border"
                                            Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                            To="Transparent" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimation Duration="0:0:0.4"
                                             Storyboard.TargetName="txb_mouseOver1"
                                             Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                             To="0" />
                            <DoubleAnimation BeginTime="0:0:0.4"
                                             Duration="0:0:0"
                                             Storyboard.TargetName="txb_mouseOver2"
                                             Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                             To="0" />
                            <ColorAnimation BeginTime="0:0:0.4"
                                            Duration="0:0:0"
                                            Storyboard.TargetName="txb_border"
                                            Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                            To="{StaticResource BorderLightBrushGradientColor1}" />
                            <ColorAnimation BeginTime="0:0:0.4"
                                            Duration="0:0:0"
                                            Storyboard.TargetName="txb_border"
                                            Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                            To="{StaticResource BorderLightBrushGradientColor2}" />
                        </Storyboard>
                        <Storyboard x:Key="FocusOn">
                            <ColorAnimation Duration="0:0:0.4"
                                            Storyboard.TargetName="txb_border"
                                            Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                            To="{StaticResource BorderBrushGradientColor1}" />
                            <ColorAnimation Duration="0:0:0.4"
                                            Storyboard.TargetName="txb_border"
                                            Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                            To="{StaticResource BorderBrushGradientColor2}" />
                        </Storyboard>
                        <Storyboard x:Key="FocusOff">
                            <ColorAnimation Duration="0:0:0.4"
                                            Storyboard.TargetName="txb_border"
                                            Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                            To="{StaticResource BorderBrushSolidColor}" />
                            <ColorAnimation Duration="0:0:0.4"
                                            Storyboard.TargetName="txb_border"
                                            Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                            To="{StaticResource BorderBrushSolidColor}" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border x:Name="txb_mouseOver2"
                                Background="{TemplateBinding Background}"
                                CornerRadius="2"
                                Opacity="0" />
                        <Border x:Name="txb_mouseOver1"
                                Background="{StaticResource ControlBackgroundLine}"
                                CornerRadius="2"
                                Opacity="0" />
                        <Border x:Name="txb_border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2">
                            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="txb_border" Property="Background" Value="{StaticResource DisabledBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            <Setter Property="Opacity" Value="0.85" />
                            <Setter TargetName="txb_border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource FocusOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource FocusOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  RichTextBox  -->
    <Style BasedOn="{x:Null}" TargetType="{x:Type RichTextBox}">
        <Style.Resources>
            <Style x:Key="{x:Type FlowDocument}" TargetType="{x:Type FlowDocument}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
            </Style>
        </Style.Resources>
        <Setter Property="Background" Value="{StaticResource ControlLightBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="CaretBrush" Value="{StaticResource ControlActiveBorderBrush}" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="Height" Value="34" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RichTextBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="FocusOn">
                            <ColorAnimation Duration="0:0:0.4"
                                            Storyboard.TargetName="txb_border"
                                            Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                            To="{StaticResource BorderBrushGradientColor1}" />
                            <ColorAnimation Duration="0:0:0.4"
                                            Storyboard.TargetName="txb_border"
                                            Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                            To="{StaticResource BorderBrushGradientColor2}" />
                        </Storyboard>
                        <Storyboard x:Key="FocusOff">
                            <ColorAnimation Duration="0:0:0.4"
                                            Storyboard.TargetName="txb_border"
                                            Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                            To="{StaticResource BorderBrushSolidColor}" />
                            <ColorAnimation Duration="0:0:0.4"
                                            Storyboard.TargetName="txb_border"
                                            Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                            To="{StaticResource BorderBrushSolidColor}" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border x:Name="txb_mouseOver2"
                                Background="{TemplateBinding Background}"
                                CornerRadius="2"
                                Opacity="0" />
                        <Border x:Name="txb_mouseOver1"
                                Background="{StaticResource ControlBackgroundLine}"
                                CornerRadius="2"
                                Opacity="0" />
                        <Border x:Name="txb_border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2">
                            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="txb_border" Property="Background" Value="{StaticResource DisabledBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            <Setter Property="Opacity" Value="0.85" />
                            <Setter TargetName="txb_border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource FocusOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource FocusOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ScrollBar  -->
    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="GridScrollBar"
                              Width="16"
                              Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="16" />
                                <RowDefinition />
                                <RowDefinition MaxHeight="16" />
                            </Grid.RowDefinitions>
                            <RepeatButton x:Name="PageUpButton"
                                          Grid.Row="0"
                                          Command="ScrollBar.LineUpCommand"
                                          Style="{DynamicResource RepeatButtonArrowScrollBar}" />
                            <Track x:Name="PART_Track"
                                   Grid.Row="1"
                                   IsDirectionReversed="True"
                                   Orientation="Vertical">
                                <Track.Thumb>
                                    <Thumb Style="{DynamicResource ThumbScrollBar}" />
                                </Track.Thumb>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="DecreaseRepeatButton"
                                                  Command="ScrollBar.PageUpCommand"
                                                  Style="{DynamicResource RepeatButtonPageScrollBar}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="IncreaseRepeatButton"
                                                  Command="ScrollBar.PageDownCommand"
                                                  Style="{DynamicResource RepeatButtonPageScrollBar}" />
                                </Track.IncreaseRepeatButton>
                            </Track>
                            <RepeatButton x:Name="PageDownButton"
                                          Grid.Row="2"
                                          Command="ScrollBar.LineDownCommand"
                                          Style="{DynamicResource RepeatButtonArrowScrollBar}">
                                <RepeatButton.LayoutTransform>
                                    <RotateTransform Angle="180" />
                                </RepeatButton.LayoutTransform>
                            </RepeatButton>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="GridScrollBar" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="Orientation" Value="Vertical" />
                            <Setter TargetName="IncreaseRepeatButton" Property="Command" Value="ScrollBar.LineRightCommand" />
                            <Setter TargetName="DecreaseRepeatButton" Property="Command" Value="ScrollBar.LineLeftCommand" />
                            <Setter TargetName="PageDownButton" Property="Command" Value="ScrollBar.PageRightCommand" />
                            <Setter TargetName="PageUpButton" Property="Command" Value="ScrollBar.PageLeftCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RepeatButtonArrowScrollBar"
           BasedOn="{x:Null}"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="Height" Value="16" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <ControlTemplate.Resources>

                        <Geometry x:Key="path">F1 M 23.9063,22.5L 21.9063,24.5L 14.9063,31.75L 14.9063,25.25L 23.9063,15.75L 32.9063,25.25L 32.9063,31.75L 25.9063,24.5L 23.9063,22.5 Z</Geometry>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border x:Name="brd" Background="Transparent" />
                        <Path x:Name="RepeatButtonArrow"
                              Width="8"
                              Height="8"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="{StaticResource path}"
                              Fill="{StaticResource NormalBrushScrollBar}"
                              Stretch="Fill"
                              StrokeEndLineCap="Round"
                              StrokeStartLineCap="Round"
                              UseLayoutRounding="False" />
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="RepeatButtonArrow" Property="Fill" Value="{StaticResource HoverBrushScrollBar}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="RepeatButtonArrow" Property="Fill" Value="#FFF" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="RepeatButtonArrow" Property="Fill" Value="{StaticResource DisabledBrushScrollBar}" />
                            <Setter TargetName="RepeatButtonArrow" Property="Opacity" Value="0.72" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ThumbScrollBar" TargetType="{x:Type Thumb}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimation Duration="0:0:0.3"
                                             Storyboard.TargetName="hoverRect_thumb"
                                             Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                             To="1" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimation Duration="0:0:0.3"
                                             Storyboard.TargetName="hoverRect_thumb"
                                             Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                             To="0" />
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimation Duration="0:0:0.3"
                                             Storyboard.TargetName="pressedRect_thumb"
                                             Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                             To="1" />
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimation Duration="0:0:0.3"
                                             Storyboard.TargetName="pressedRect_thumb"
                                             Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                             To="0" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Rectangle x:Name="rect_thumb"
                                   Width="8"
                                   Fill="{StaticResource ControlBackgroundOver}"
                                   RadiusX="4"
                                   RadiusY="4" />
                        <Rectangle x:Name="hoverRect_thumb"
                                   Width="8"
                                   Fill="{StaticResource ScrollBarThumbBackground}"
                                   Opacity="0"
                                   RadiusX="4"
                                   RadiusY="4" />
                        <Rectangle x:Name="pressedRect_thumb"
                                   Width="8"
                                   Fill="{StaticResource ScrollBarThumbPressedBackground}"
                                   Opacity="0"
                                   RadiusX="4"
                                   RadiusY="4" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter TargetName="rect_thumb" Property="Fill" Value="{StaticResource ScrollBarThumbPressedBackground}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="rect_thumb" Property="Fill" Value="{StaticResource DisabledBrushScrollBar}" />
                            <Setter TargetName="rect_thumb" Property="Opacity" Value="0.72" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RepeatButtonPageScrollBar" TargetType="{x:Type RepeatButton}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ScrollViewer  -->
    <Style BasedOn="{x:Null}" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Row="0"
                                                Grid.Column="0"
                                                Margin="{TemplateBinding Padding}"
                                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                                Content="{TemplateBinding Content}"
                                                ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Grid.Row="0"
                                   Grid.Column="1"
                                   AutomationProperties.AutomationId="VerticalScrollBar"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   Minimum="0"
                                   Orientation="Vertical"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{Binding Path=VerticalOffset,
                                                   Mode=OneWay,
                                                   RelativeSource={RelativeSource TemplatedParent}}" />
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   Grid.Row="1"
                                   Grid.Column="0"
                                   AutomationProperties.AutomationId="HorizontalScrollBar"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   Minimum="0"
                                   Orientation="Horizontal"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Value="{Binding Path=HorizontalOffset,
                                                   Mode=OneWay,
                                                   RelativeSource={RelativeSource TemplatedParent}}" />
                        <Border Grid.Row="1"
                                Grid.Column="1"
                                Background="Transparent" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  GroupBox  -->
    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="Foreground" Value="{StaticResource ControlForeground}" />
        <Setter Property="Background" Value="{StaticResource ControlLightBackground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid SnapsToDevicePixels="true">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Border x:Name="header_groupbox"
                                    Grid.Row="0"
                                    Background="{StaticResource ControlBackgroundNormal}"
                                    BorderBrush="{StaticResource ControlBorderBrush}"
                                    BorderThickness="1,1,1,0"
                                    CornerRadius="5,5,0,0"
                                    Padding="5">
                                <ContentPresenter ContentSource="Header"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <Border Grid.Row="0"
                                    Margin="2"
                                    Background="Transparent"
                                    CornerRadius="4,4,0,0" />
                            <Border x:Name="container_groupbox"
                                    Grid.Row="1"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{StaticResource ControlBorderBrush}"
                                    BorderThickness="1,1,1,1"
                                    CornerRadius="0,0,5,5">
                                <ContentPresenter Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="header_groupbox" Property="Background" Value="{StaticResource DisabledBrush}" />
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource DisabledForeground}" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ComboBox  -->
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <ColorAnimation Duration="0:0:0.4"
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                            To="{StaticResource BorderBrushGradientColor1}" />
                            <ColorAnimation Duration="0:0:0.4"
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                            To="{StaticResource BorderBrushGradientColor2}" />
                            <ColorAnimation Duration="0:0:0.4"
                                            Storyboard.TargetName="ArrowDown"
                                            Storyboard.TargetProperty="(Path.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                            To="{StaticResource BorderBrushGradientColor2}" />
                            <ColorAnimation Duration="0:0:0.4"
                                            Storyboard.TargetName="ArrowDown"
                                            Storyboard.TargetProperty="(Path.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                            To="{StaticResource BorderBrushGradientColor2}" />
                            <ColorAnimation Duration="0:0:0.4"
                                            Storyboard.TargetName="ArrowUp"
                                            Storyboard.TargetProperty="(Path.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                            To="{StaticResource BorderBrushGradientColor2}" />
                            <ColorAnimation Duration="0:0:0.4"
                                            Storyboard.TargetName="ArrowUp"
                                            Storyboard.TargetProperty="(Path.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                            To="{StaticResource BorderBrushGradientColor2}" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <ColorAnimation Duration="0:0:0.4"
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                            To="{StaticResource BorderBrushSolidColor}" />
                            <ColorAnimation Duration="0:0:0.4"
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                            To="{StaticResource BorderBrushSolidColor}" />
                            <ColorAnimation Duration="0:0:0.4"
                                            Storyboard.TargetName="ArrowDown"
                                            Storyboard.TargetProperty="(Path.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                            To="#DDDEEE" />
                            <ColorAnimation Duration="0:0:0.4"
                                            Storyboard.TargetName="ArrowDown"
                                            Storyboard.TargetProperty="(Path.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                            To="#DDDDDD" />
                            <ColorAnimation Duration="0:0:0.4"
                                            Storyboard.TargetName="ArrowUp"
                                            Storyboard.TargetProperty="(Path.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                            To="{StaticResource ArrowBrushComboBox}" />
                            <ColorAnimation Duration="0:0:0.4"
                                            Storyboard.TargetName="ArrowUp"
                                            Storyboard.TargetProperty="(Path.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                            To="{StaticResource ArrowBrushComboBox}" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border Grid.ColumnSpan="2"
                            BorderBrush="{Binding BorderBrush,
                                                  Mode=OneWay,
                                                  RelativeSource={RelativeSource Mode=FindAncestor,
                                                                                 AncestorType={x:Type ComboBox}}}"
                            BorderThickness="{Binding BorderThickness,
                                                      Mode=OneWay,
                                                      RelativeSource={RelativeSource Mode=FindAncestor,
                                                                                     AncestorType={x:Type ComboBox}}}"
                            CornerRadius="6">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="24" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Border"
                                    Grid.ColumnSpan="2"
                                    Background="{StaticResource ControlBackgroundNormal}"
                                    BorderBrush="{StaticResource ControlBorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="5" />
                            <Border x:Name="BorderToggle"
                                    Grid.Column="0"
                                    Margin="1"
                                    Background="{Binding Background,
                                                         Mode=OneWay,
                                                         RelativeSource={RelativeSource Mode=FindAncestor,
                                                                                        AncestorType={x:Type ComboBox}}}"
                                    BorderBrush="{StaticResource ControlBorderBrush}"
                                    BorderThickness="0,0,1,0"
                                    CornerRadius="3,0,0,3" />
                            <Grid Grid.Column="1">
                                <Path x:Name="ArrowDown"
                                      Margin="0,8,0,0"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Data="M -2 0 L 2 4 L 6 0 Z">
                                    <Path.Fill>
                                        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                            <GradientStop Offset="0.204" Color="{StaticResource ArrowBrushComboBox}" />
                                            <GradientStop Offset="0.864" Color="{StaticResource ArrowBrushComboBox}" />
                                        </LinearGradientBrush>
                                    </Path.Fill>
                                </Path>
                                <Path x:Name="ArrowUp"
                                      Margin="0,0,0,8"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Data="M -2 4 L 2 0 L 6 4 Z">
                                    <Path.Fill>
                                        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                            <GradientStop Offset="0.204" Color="{StaticResource ArrowBrushComboBox}" />
                                            <GradientStop Offset="0.864" Color="{StaticResource ArrowBrushComboBox}" />
                                        </LinearGradientBrush>
                                    </Path.Fill>
                                </Path>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBrush}" />
                            <Setter TargetName="BorderToggle" Property="Background" Value="{StaticResource DisabledBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource DisabledForeground}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="ArrowDown" Property="Fill">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource DisabledForeground}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="ArrowUp" Property="Fill">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource DisabledForeground}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost"
                Background="{TemplateBinding Background}"
                Focusable="False" />
    </ControlTemplate>
    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="{StaticResource ControlLightBackground}" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="28" />
        <Setter Property="FontFamily" Value="Calibri,Arial" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="IsSynchronizedWithCurrentItem" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsVirtualizing="True" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ContentPresenter Name="ContentSite"
                                          Margin="6,3,32,3"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          IsHitTestVisible="False" />
                        <TextBox x:Name="PART_EditableTextBox"
                                 Margin="6,3,32,3"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Center"
                                 Background="Transparent"
                                 Focusable="True"
                                 IsReadOnly="{TemplateBinding IsReadOnly}"
                                 Style="{x:Null}"
                                 Template="{StaticResource ComboBoxTextBox}"
                                 Visibility="Hidden" />
                        <Popup Name="Popup"
                               Margin="3,-8,-3,8"
                               AllowsTransparency="True"
                               Focusable="False"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               Placement="Bottom"
                               PopupAnimation="Slide">
                            <Grid Name="DropDown"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                  SnapsToDevicePixels="True">
                                <Border x:Name="DropDownBorder"
                                        Margin="0,3,0,3"
                                        Background="{StaticResource ControlLightBackground}"
                                        BorderBrush="{StaticResource ControlBorderBrush}"
                                        BorderThickness="1"
                                        CornerRadius="3" />
                                <ScrollViewer Margin="0,3" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                        <ToggleButton Name="ToggleButton"
                                      Grid.Column="2"
                                      ClickMode="Press"
                                      Focusable="False"
                                      IsChecked="{Binding Path=IsDropDownOpen,
                                                          Mode=TwoWay,
                                                          RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{StaticResource ComboBoxToggleButton}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource DisabledForeground}" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background" Value="{StaticResource DisabledBrush}" />
                            <Setter Property="Opacity" Value="0.72" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True" />
                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="IsTabStop" Value="False" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource ControlActiveBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers />
    </Style>
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="ComboBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <ColorAnimation Duration="0:0:0.3"
                                            Storyboard.TargetName="content"
                                            Storyboard.TargetProperty="(ComboBoxItem.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource BorderBrushGradientColor2}" />
                            <ColorAnimation Duration="0:0:0"
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                            To="{StaticResource HighlightComboBoxItem1}" />
                            <ColorAnimation Duration="0:0:0"
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                            To="{StaticResource HighlightComboBoxItem2}" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <ColorAnimation Duration="0:0:0.3"
                                            Storyboard.TargetName="content"
                                            Storyboard.TargetProperty="(ComboBoxItem.Foreground).(SolidColorBrush.Color)"
                                            To="#FFEEEFFF" />
                            <ColorAnimation Duration="0:0:0"
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                            To="Transparent" />
                            <ColorAnimation Duration="0:0:0"
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                            To="Transparent" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border Name="Border"
                            BorderThickness="1"
                            Padding="2"
                            SnapsToDevicePixels="True">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                <GradientStop Offset="0" Color="Transparent" />
                                <GradientStop Offset="1" Color="Transparent" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <ContentPresenter x:Name="content" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForeground2}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ProgressBar  -->
    <Style TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="Background" Value="{StaticResource ControlLightBackground}" />
        <Setter Property="Maximum" Value="100" />
        <Setter Property="Height" Value="20" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="IndeterminateProgressBar" RepeatBehavior="Forever">
                            <ObjectAnimationUsingKeyFrames Duration="00:00:00"
                                                           Storyboard.TargetName="IndeterminateRoot"
                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Duration="00:00:00"
                                                           Storyboard.TargetName="DeterminateRoot"
                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateGradientFill" Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.Transform).(TransformGroup.Children)[0].X">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                                <SplineDoubleKeyFrame KeyTime="00:00:.35" Value="20" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="Root">
                        <Border x:Name="PART_Track"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                        <Grid x:Name="ProgressBarRootGrid">
                            <Grid x:Name="IndeterminateRoot" Visibility="Collapsed">
                                <Rectangle x:Name="IndeterminateSolidFill"
                                           Margin="{TemplateBinding BorderThickness}"
                                           Fill="{StaticResource BrushTrackProgressBar}"
                                           Opacity="1"
                                           RenderTransformOrigin="0.5,0.5"
                                           StrokeThickness="0" />
                                <Rectangle x:Name="IndeterminateGradientFill"
                                           Margin="{TemplateBinding BorderThickness}"
                                           Fill="{StaticResource IndeterminateBrushProgressbar}"
                                           Opacity="0.7"
                                           StrokeThickness="1" />
                            </Grid>
                            <Grid x:Name="DeterminateRoot" Margin="1">
                                <Border x:Name="PART_Indicator"
                                        Margin="-1"
                                        HorizontalAlignment="Left"
                                        Background="{StaticResource BrushTrackProgressBar}">
                                    <Rectangle x:Name="GradientFill"
                                               Fill="{StaticResource IndeterminateBrushProgressbar}"
                                               Opacity="0.7"
                                               Visibility="Collapsed" />
                                </Border>
                            </Grid>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="Root" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource IndeterminateProgressBar}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DeterminateRoot" Property="Visibility" Value="Collapsed" />
                            <Setter Property="Opacity" Value=".4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1" />
    </Style>

    <!--  ProgressBar с указанием процентов  -->
    <Style x:Key="ProgressBarPercent" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="Background" Value="{StaticResource ControlLightBackground}" />
        <Setter Property="Maximum" Value="100" />
        <Setter Property="Height" Value="20" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="IndeterminateProgressBar" RepeatBehavior="Forever">
                            <ObjectAnimationUsingKeyFrames Duration="00:00:00"
                                                           Storyboard.TargetName="IndeterminateRoot"
                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Duration="00:00:00"
                                                           Storyboard.TargetName="DeterminateRoot"
                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateGradientFill" Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.Transform).(TransformGroup.Children)[0].X">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                                <SplineDoubleKeyFrame KeyTime="00:00:.35" Value="20" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="Root">
                        <Border x:Name="PART_Track"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                        <Grid x:Name="ProgressBarRootGrid">
                            <Grid x:Name="IndeterminateRoot" Visibility="Collapsed">
                                <Rectangle x:Name="IndeterminateSolidFill"
                                           Margin="{TemplateBinding BorderThickness}"
                                           Fill="{StaticResource BrushTrackProgressBar}"
                                           Opacity="1"
                                           RenderTransformOrigin="0.5,0.5"
                                           StrokeThickness="0" />
                                <Rectangle x:Name="IndeterminateGradientFill"
                                           Margin="{TemplateBinding BorderThickness}"
                                           Fill="{StaticResource IndeterminateBrushProgressbar}"
                                           Opacity="0.7"
                                           StrokeThickness="1" />
                            </Grid>
                            <Grid x:Name="DeterminateRoot" Margin="1">
                                <Border x:Name="PART_Indicator"
                                        Margin="-1"
                                        HorizontalAlignment="Left"
                                        Background="{StaticResource BrushTrackProgressBar}">
                                    <Rectangle x:Name="GradientFill"
                                               Fill="{StaticResource IndeterminateBrushProgressbar}"
                                               Opacity="0.7"
                                               Visibility="Collapsed" />
                                </Border>
                            </Grid>
                            <Grid x:Name="GridValue"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0"
                                       Content="{TemplateBinding Value}"
                                       Foreground="{TemplateBinding Foreground}"
                                       Padding="0"
                                       Style="{x:Null}" />
                                <Label Grid.Column="1"
                                       Content="%"
                                       Foreground="{TemplateBinding Foreground}"
                                       Padding="0"
                                       Style="{x:Null}" />
                            </Grid>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="Root" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource IndeterminateProgressBar}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1" />
    </Style>

    <!--  ToolTip  -->
    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Foreground" Value="{StaticResource ControlBackgroundOver}" />
        <Setter Property="FontStyle" Value="Italic" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <Border Name="border_tooltip"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Background="{StaticResource BackgroundToolTip}"
                            BorderBrush="{StaticResource BorderBrushToolTip}"
                            BorderThickness="2">
                        <ContentPresenter Margin="5"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Top" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="border_tooltip" Property="CornerRadius" Value="5" />
                            <Setter TargetName="border_tooltip" Property="SnapsToDevicePixels" Value="True" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border_tooltip" Property="Background" Value="{StaticResource BackgroundToolTipDisabled}" />
                            <Setter Property="Opacity" Value="0.82" />
                            <Setter Property="Foreground" Value="#888" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ResizeGrip  -->
    <Style x:Key="{x:Type ResizeGrip}" TargetType="{x:Type ResizeGrip}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ResizeGrip}">
                    <Grid Background="Transparent" SnapsToDevicePixels="True">
                        <Path Margin="0,0,2,2"
                              HorizontalAlignment="Right"
                              VerticalAlignment="Bottom"
                              Data="M9,0L11,0 11,11 0,11 0,9 3,9 3,6 6,6 6,3 9,3z">
                            <Path.Fill>
                                <DrawingBrush TileMode="Tile"
                                              Viewbox="0,0,3,3"
                                              ViewboxUnits="Absolute"
                                              Viewport="0,0,3,3"
                                              ViewportUnits="Absolute">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <DrawingGroup.Children>
                                                <GeometryDrawing Brush="{StaticResource ControlBackgroundOver}" Geometry="M0,0L2,0 2,2 0,2z" />
                                            </DrawingGroup.Children>
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Path.Fill>
                        </Path>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  TabControl  -->
    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{StaticResource NormalBackgroundTabControl}" />
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="True"
                          KeyboardNavigation.TabNavigation="Local"
                          SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                            <RowDefinition x:Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="HeaderPanel"
                                  Grid.Row="0"
                                  Grid.Column="0"
                                  Margin="4,1,10,0"
                                  Panel.ZIndex="1"
                                  IsItemsHost="True"
                                  KeyboardNavigation.TabIndex="1" />
                        <Border x:Name="ContentPanel"
                                Grid.Row="1"
                                Grid.Column="0"
                                BorderBrush="{StaticResource ControlBorderBrush}"
                                BorderThickness="1"
                                CornerRadius="0,5,5,5">
                            <Border x:Name="InnerBd"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="0,4,4,4"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    KeyboardNavigation.TabIndex="2"
                                    KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost"
                                                  Margin="{TemplateBinding Padding}"
                                                  ContentSource="SelectedContent"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource DisabledForeground}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="ContentPanel" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                            <Setter TargetName="InnerBd" Property="Background" Value="{StaticResource DisabledBrush}" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
                            <Setter TargetName="HeaderPanel" Property="Margin" Value="2,0,2,2" />
                            <Setter TargetName="ContentPanel" Property="CornerRadius" Value="5,5,5,0" />
                            <Setter TargetName="InnerBd" Property="CornerRadius" Value="4,4,4,0" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
                            <Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Margin" Value="0,2,2,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
                            <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Margin" Value="0,2,2,2" />
                            <Setter TargetName="ContentPanel" Property="CornerRadius" Value="5,0,5,5" />
                            <Setter TargetName="InnerBd" Property="CornerRadius" Value="4,0,4,4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusLine}" />
        <Setter Property="Background" Value="{StaticResource TabControlItemBackgroundNormal}" />
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
        <Setter Property="BorderThickness" Value="1,1,1,0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="MinWidth" Value="10" />
        <Setter Property="MinHeight" Value="26" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <ColorAnimation Duration="0:0:0.3"
                                            Storyboard.TargetName="Content"
                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForeground}" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <ColorAnimation Duration="0:0:0.3"
                                            Storyboard.TargetName="Content"
                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForegroundWhite}" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid"
                          Margin="0,0,3,0"
                          Background="Transparent"
                          SnapsToDevicePixels="True">
                        <Border x:Name="border_inner"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1,1,1,0"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="Content"
                                              HorizontalAlignment="{Binding Path=HorizontalContentAlignment,
                                                                            RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                              VerticalAlignment="{Binding Path=VerticalContentAlignment,
                                                                          RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                              ContentSource="Header"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <Border x:Name="border_hover"
                                Background="{StaticResource ControlBackgroundLine}"
                                Opacity="0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter TargetName="border_inner" Property="Background" Value="{StaticResource PressedBackgroundTabItem}" />
                            <Setter Property="Foreground" Value="{StaticResource ControlForeground}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border_inner" Property="Background" Value="{StaticResource DisabledBrush}" />
                            <Setter TargetName="border_inner" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource DisabledForeground}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Margin" Value="2,0,-2,0" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="border_inner" Property="BorderThickness" Value="1,0,1,1" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="TabStripPlacement" Value="Top" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-2,-2,-1" />
                            <Setter TargetName="Content" Property="Margin" Value="0,0,0,1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="TabStripPlacement" Value="Bottom" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-1,-2,-2" />
                            <Setter TargetName="Content" Property="Margin" Value="0,1,0,0" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="TabStripPlacement" Value="Left" />
                            </MultiTrigger.Conditions>

                            <Setter Property="Margin" Value="-2,-2,-1,-2" />
                            <Setter TargetName="Content" Property="Margin" Value="0,0,1,0" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="TabStripPlacement" Value="Right" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-1,-2,-2,-2" />
                            <Setter TargetName="Content" Property="Margin" Value="1,0,0,0" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Menu  -->
    <Geometry x:Key="CheckMarker">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>
    <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>

    <Style TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{StaticResource ControlBackgroundNormal}" />
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource DisabledBrush}" />
                            <Setter Property="Opacity" Value="0.78" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="Foreground" Value="{StaticResource ControlForeground}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Padding" Value="7,2,8,3" />
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Padding" Value="7,2,8,3" />
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Padding" Value="2,3,2,3" />
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Padding" Value="2,3,2,3" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="True">
            <Rectangle Margin="0"
                       Fill="{TemplateBinding Background}"
                       RadiusX="1"
                       RadiusY="1"
                       Stroke="{TemplateBinding BorderBrush}"
                       StrokeThickness="1" />
            <Rectangle x:Name="InnerBorderHeaderMenu" Margin="0" />
            <DockPanel>
                <ContentPresenter x:Name="IconHeaderMenu"
                                  Margin="4,0,4,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Path x:Name="CheckMarkerMenuItem"
                      Margin="6,0,0,0"
                      VerticalAlignment="Center"
                      Data="{StaticResource CheckMarker}"
                      Fill="{TemplateBinding Foreground}"
                      FlowDirection="LeftToRight"
                      Visibility="Collapsed" />
                <ContentPresenter Margin="{TemplateBinding Padding}"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </DockPanel>
            <Popup x:Name="PART_Popup"
                   AllowsTransparency="True"
                   Focusable="False"
                   HorizontalOffset="1"
                   IsOpen="{TemplateBinding IsSubmenuOpen}"
                   Placement="Bottom"
                   PopupAnimation="Scroll"
                   VerticalOffset="-1">
                <ContentControl x:Name="SubmenuBorder"
                                IsTabStop="False"
                                Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent,
                                                                                 TypeInTargetAssembly={x:Type FrameworkElement}}}">
                    <ItemsPresenter Margin="2"
                                    Grid.IsSharedSizeScope="True"
                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                    KeyboardNavigation.TabNavigation="Cycle"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </ContentControl>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="IconHeaderMenu" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="CheckMarkerMenuItem" Property="Visibility" Value="Visible" />
                <Setter TargetName="IconHeaderMenu" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="InnerBorderHeaderMenu" Property="Fill" Value="{StaticResource BackgroundHoverMenu}" />
                <Setter TargetName="InnerBorderHeaderMenu" Property="Stroke" Value="{StaticResource BorderMenuItem}" />
                <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="True">
                <Setter TargetName="InnerBorderHeaderMenu" Property="Fill" Value="{StaticResource SelectedHeadermenu}" />
                <Setter TargetName="InnerBorderHeaderMenu" Property="Stroke" Value="{StaticResource BorderMenuItem}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForeground2}" />
                <Setter TargetName="CheckMarkerMenuItem" Property="Fill" Value="Transparent" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}" TargetType="{x:Type ContentControl}">
        <Border Background="{StaticResource ControlLightBackground}"
                BorderBrush="{StaticResource BorderMenuItem}"
                BorderThickness="1">
            <Grid>
                <Rectangle Width="28"
                           Margin="2"
                           HorizontalAlignment="Left"
                           Fill="{StaticResource IconBackgroundMenuItem}"
                           RadiusX="2"
                           RadiusY="2" />
                <Rectangle Width="1"
                           Margin="30,2,0,2"
                           HorizontalAlignment="Left"
                           Fill="Transparent" />
                <Rectangle Width="1"
                           Margin="31,2,0,2"
                           HorizontalAlignment="Left"
                           Fill="Transparent" />
                <ContentPresenter Margin="2,0" />
            </Grid>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="True">
            <Rectangle x:Name="BackgroundMenuItem"
                       Margin="1"
                       Fill="{TemplateBinding Background}"
                       RadiusX="1"
                       RadiusY="1"
                       Stroke="{TemplateBinding BorderBrush}"
                       StrokeThickness="1" />
            <Rectangle x:Name="InnerBorderHeaderMenu"
                       Margin="0"
                       RadiusX="2"
                       RadiusY="2" />
            <DockPanel>
                <ContentPresenter x:Name="IconHeaderMenu"
                                  Margin="4,0,4,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Path x:Name="CheckMarkerMenuItem"
                      Margin="6,0,0,0"
                      VerticalAlignment="Center"
                      Data="{StaticResource CheckMarker}"
                      Fill="{TemplateBinding Foreground}"
                      FlowDirection="LeftToRight"
                      Visibility="Collapsed" />
                <ContentPresenter Margin="{TemplateBinding Padding}"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </DockPanel>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="IconHeaderMenu" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="CheckMarkerMenuItem" Property="Visibility" Value="Visible" />
                <Setter TargetName="IconHeaderMenu" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="InnerBorderHeaderMenu" Property="Stroke" Value="{StaticResource BorderMenuItem}" />
                <Setter TargetName="InnerBorderHeaderMenu" Property="Fill" Value="Transparent" />
                <Setter TargetName="BackgroundMenuItem" Property="Fill" Value="Transparent" />
                <Setter Property="Foreground" Value="#eee" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter TargetName="BackgroundMenuItem" Property="Fill" Value="Transparent" />
                <Setter TargetName="InnerBorderHeaderMenu" Property="Stroke" Value="{StaticResource BorderMenuItem}" />
                <Setter TargetName="InnerBorderHeaderMenu" Property="Fill" Value="Transparent" />
                <Setter TargetName="InnerBorderHeaderMenu" Property="StrokeDashArray" Value="1,2" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForeground2}" />
                <Setter TargetName="CheckMarkerMenuItem" Property="Fill" Value="Transparent" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="True">
            <Rectangle x:Name="BackgroundSubmenuItem"
                       Fill="{TemplateBinding Background}"
                       RadiusX="2"
                       RadiusY="2"
                       Stroke="{TemplateBinding BorderBrush}"
                       StrokeThickness="1" />
            <Rectangle x:Name="InnerBorderSubmenuItem"
                       Margin="1"
                       RadiusX="2"
                       RadiusY="2" />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"
                                      MinWidth="24"
                                      SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="37" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                    <ColumnDefinition Width="17" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="IconSubmenu"
                                  Margin="1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Border x:Name="CheckedSubmenu"
                        Width="22"
                        Height="22"
                        Margin="1"
                        Background="Transparent"
                        Visibility="Hidden">
                    <Path x:Name="PathCheckedSubmenu"
                          Width="9"
                          Height="11"
                          Data="{StaticResource CheckMarker}"
                          Fill="{TemplateBinding Foreground}"
                          FlowDirection="LeftToRight" />
                </Border>
                <ContentPresenter Grid.Column="2"
                                  Margin="{TemplateBinding Padding}"
                                  VerticalAlignment="Center"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <TextBlock Grid.Column="4"
                           Margin="{TemplateBinding Padding}"
                           Text="{TemplateBinding InputGestureText}" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="IconSubmenu" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="CheckedSubmenu" Property="Visibility" Value="Visible" />
                <Setter TargetName="IconSubmenu" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="BackgroundSubmenuItem" Property="Fill" Value="{StaticResource BackgroundHoverSubmenu}" />
                <Setter TargetName="BackgroundSubmenuItem" Property="Stroke" Value="{StaticResource BorderMenuItem}" />
                <Setter TargetName="InnerBorderSubmenuItem" Property="Stroke" Value="#ddd" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForeground2}" />
                <Setter TargetName="PathCheckedSubmenu" Property="Fill" Value="{StaticResource DisabledBrush}" />
                <Setter TargetName="CheckedSubmenu" Property="Opacity" Value="0.72" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="True">
            <Rectangle x:Name="BackgroundHeaderSubmenu"
                       Fill="{TemplateBinding Background}"
                       RadiusX="2"
                       RadiusY="2"
                       Stroke="{TemplateBinding BorderBrush}"
                       StrokeThickness="1" />
            <Rectangle x:Name="InnerBorderHeaderSubmenu"
                       Margin="1"
                       RadiusX="2"
                       RadiusY="2"
                       Stroke="Transparent"
                       StrokeThickness="1" />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"
                                      MinWidth="24"
                                      SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="37" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                    <ColumnDefinition Width="17" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="IconHeaderSubmenu"
                                  Margin="1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Border x:Name="CheckedHeaderSubmenu"
                        Width="22"
                        Height="22"
                        Margin="1"
                        Background="Transparent"
                        Visibility="Hidden">
                    <Path x:Name="PathCheckedHeaderSubmenu"
                          Width="9"
                          Height="11"
                          Data="{StaticResource CheckMarker}"
                          Fill="{TemplateBinding Foreground}"
                          FlowDirection="LeftToRight" />
                </Border>
                <ContentPresenter Grid.Column="2"
                                  Margin="{TemplateBinding Padding}"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <TextBlock Grid.Column="4"
                           Margin="{TemplateBinding Padding}"
                           Text="{TemplateBinding InputGestureText}"
                           Visibility="Collapsed" />
                <Path Grid.Column="5"
                      Margin="4,0,0,0"
                      VerticalAlignment="Center"
                      Data="{StaticResource RightArrow}"
                      Fill="{TemplateBinding Foreground}" />
            </Grid>
            <Popup x:Name="PART_Popup"
                   AllowsTransparency="True"
                   Focusable="false"
                   HorizontalOffset="-2"
                   IsOpen="{TemplateBinding IsSubmenuOpen}"
                   Placement="Right"
                   PopupAnimation="Slide"
                   VerticalOffset="-2">
                <ContentControl x:Name="SubmenuBorder"
                                IsTabStop="False"
                                Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent,
                                                                                 TypeInTargetAssembly={x:Type FrameworkElement}}}">
                    <ItemsPresenter Margin="2"
                                    Grid.IsSharedSizeScope="True"
                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                    KeyboardNavigation.TabNavigation="Cycle"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </ContentControl>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="IconHeaderSubmenu" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="CheckedHeaderSubmenu" Property="Visibility" Value="Visible" />
                <Setter TargetName="IconHeaderSubmenu" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="BackgroundHeaderSubmenu" Property="Fill" Value="{StaticResource BackgroundHoverSubmenu}" />
                <Setter TargetName="BackgroundHeaderSubmenu" Property="Stroke" Value="{StaticResource BorderMenuItem}" />
                <Setter TargetName="InnerBorderHeaderSubmenu" Property="Stroke" Value="#ddd" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForeground2}" />
                <Setter TargetName="PathCheckedHeaderSubmenu" Property="Fill" Value="{StaticResource DisabledBrush}" />
                <Setter TargetName="CheckedHeaderSubmenu" Property="Opacity" Value="0.72" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">
        <Setter Property="Height" Value="3" />
        <Setter Property="Margin" Value="30,4,0,4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Border BorderBrush="{StaticResource BorderMenuItem}" BorderThickness="0,1,0,1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ContextMenu  -->
    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="BorderContextMenu"
                            Background="{StaticResource ControlLightBackground}"
                            BorderBrush="{StaticResource ControlBorderBrush}"
                            BorderThickness="2"
                            CornerRadius="4">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  StatusBar  -->
    <Style TargetType="{x:Type StatusBar}">
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="Background" Value="{StaticResource ControlBackgroundNormal}" />
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type StatusBar}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource DisabledBrush}" />
                            <Setter Property="Opacity" Value="0.78" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type StatusBarItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type StatusBarItem}">
                    <Border Background="{TemplateBinding Panel.Background}"
                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                            BorderThickness="{TemplateBinding Border.BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                        <StackPanel Orientation="Horizontal">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Content}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Border Width="3"
                                    Margin="6,0,2,0"
                                    BorderBrush="{StaticResource ControlForeground}"
                                    BorderThickness="1,0,1,0" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{StaticResource DisabledForeground2}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Expander  -->
    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <ColorAnimation Duration="0:0:0.3"
                                            Storyboard.TargetName="Content"
                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForeground}" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <ColorAnimation Duration="0:0:0.3"
                                            Storyboard.TargetName="Content"
                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForegroundWhite}" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border x:Name="border"
                            Background="Transparent"
                            BorderThickness="0"
                            Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Check"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    RenderTransformOrigin="0.5,0.5">
                                <Grid>
                                    <Ellipse x:Name="ellipse"
                                             Width="20"
                                             Height="20"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center"
                                             Stroke="{StaticResource ControlBackgroundOver}"
                                             StrokeThickness="2" />
                                    <Path x:Name="arrow"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Data="M 0 0 L 4 4 L 8 0 Z"
                                          Fill="{StaticResource ControlForeground}" />
                                </Grid>
                                <Border.RenderTransform>
                                    <RotateTransform x:Name="rotate" Angle="0" />
                                </Border.RenderTransform>
                            </Border>
                            <ContentPresenter x:Name="Content"
                                              Grid.Column="1"
                                              Margin="4,0,0,0"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Center"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="arrow" Property="Fill" Value="{StaticResource DisabledBrush}" />
                            <Setter TargetName="ellipse" Property="Stroke" Value="{StaticResource DisabledBrush}" />
                            <Setter Property="Opacity" Value="0.82" />
                            <Setter Property="Foreground" Value="{StaticResource DisabledForeground2}" />
                            <Setter TargetName="ellipse" Property="Opacity" Value=".6" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard TargetProperty="Angle">
                                        <DoubleAnimation Duration="0:0:1"
                                                         From="0"
                                                         Storyboard.TargetName="rotate"
                                                         To="180" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard TargetProperty="Angle">
                                        <DoubleAnimation Duration="0:0:1"
                                                         From="180"
                                                         Storyboard.TargetName="rotate"
                                                         To="360" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <ColorAnimation Duration="0:0:0.3"
                                            Storyboard.TargetName="Content"
                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForeground}" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <ColorAnimation Duration="0:0:0.3"
                                            Storyboard.TargetName="Content"
                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForegroundWhite}" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border x:Name="border"
                            Background="Transparent"
                            BorderThickness="0"
                            Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>
                            <Grid.LayoutTransform>
                                <RotateTransform Angle="-90" />
                            </Grid.LayoutTransform>
                            <ContentPresenter x:Name="Content"
                                              Grid.Column="1"
                                              Margin="4,3,0,3"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Top"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="True">
                                <ContentPresenter.LayoutTransform>
                                    <RotateTransform Angle="90" />
                                </ContentPresenter.LayoutTransform>
                            </ContentPresenter>
                            <Border x:Name="Check"
                                    Grid.Column="2"
                                    Background="Transparent"
                                    RenderTransformOrigin="0.5,0.5">
                                <Grid>
                                    <Ellipse x:Name="ellipse"
                                             Width="20"
                                             Height="20"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center"
                                             Stroke="{StaticResource ControlBackgroundOver}"
                                             StrokeThickness="2" />
                                    <Path x:Name="arrow"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Data="M 0 0 L 4 4 L 8 0 Z"
                                          Fill="{StaticResource ControlForeground}" />
                                </Grid>
                                <Border.RenderTransform>
                                    <RotateTransform x:Name="rotate" Angle="0" />
                                </Border.RenderTransform>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="arrow" Property="Fill" Value="{StaticResource DisabledBrush}" />
                            <Setter TargetName="ellipse" Property="Stroke" Value="{StaticResource DisabledBrush}" />
                            <Setter Property="Opacity" Value="0.82" />
                            <Setter Property="Foreground" Value="{StaticResource DisabledForeground2}" />
                            <Setter TargetName="ellipse" Property="Opacity" Value=".6" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard TargetProperty="Angle">
                                        <DoubleAnimation Duration="0:0:1"
                                                         From="0"
                                                         Storyboard.TargetName="rotate"
                                                         To="180" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard TargetProperty="Angle">
                                        <DoubleAnimation Duration="0:0:1"
                                                         From="180"
                                                         Storyboard.TargetName="rotate"
                                                         To="360" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <ColorAnimation Duration="0:0:0.3"
                                            Storyboard.TargetName="Content"
                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForeground}" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <ColorAnimation Duration="0:0:0.3"
                                            Storyboard.TargetName="Content"
                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForegroundWhite}" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border x:Name="border"
                            Background="Transparent"
                            BorderThickness="0"
                            Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Border x:Name="Check"
                                    Background="Transparent"
                                    RenderTransformOrigin="0.5,0.5">
                                <Grid>
                                    <Ellipse x:Name="ellipse"
                                             Width="20"
                                             Height="20"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center"
                                             Stroke="{StaticResource ControlBackgroundOver}"
                                             StrokeThickness="2" />
                                    <Path x:Name="arrow"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Data="M 0 0 L 4 4 L 8 0 Z"
                                          Fill="{StaticResource ControlForeground}" />
                                </Grid>
                                <Border.RenderTransform>
                                    <RotateTransform x:Name="rotate" Angle="180" />
                                </Border.RenderTransform>
                            </Border>
                            <ContentPresenter x:Name="Content"
                                              Grid.Column="1"
                                              Margin="4,3,0,3"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Center"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="arrow" Property="Fill" Value="{StaticResource DisabledBrush}" />
                            <Setter TargetName="ellipse" Property="Stroke" Value="{StaticResource DisabledBrush}" />
                            <Setter Property="Opacity" Value="0.82" />
                            <Setter Property="Foreground" Value="{StaticResource DisabledForeground2}" />
                            <Setter TargetName="ellipse" Property="Opacity" Value=".6" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard TargetProperty="Angle">
                                        <DoubleAnimation Duration="0:0:1"
                                                         From="180"
                                                         Storyboard.TargetName="rotate"
                                                         To="360" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard TargetProperty="Angle">
                                        <DoubleAnimation Duration="0:0:1"
                                                         From="0"
                                                         Storyboard.TargetName="rotate"
                                                         To="180" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <ColorAnimation Duration="0:0:0.3"
                                            Storyboard.TargetName="Content"
                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForeground}" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <ColorAnimation Duration="0:0:0.3"
                                            Storyboard.TargetName="Content"
                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForegroundWhite}" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border x:Name="border"
                            Background="Transparent"
                            BorderThickness="0"
                            Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.LayoutTransform>
                                <RotateTransform Angle="90" />
                            </Grid.LayoutTransform>
                            <Border x:Name="Check"
                                    Grid.Column="0"
                                    Background="Transparent"
                                    RenderTransformOrigin="0.5,0.5">
                                <Grid>
                                    <Ellipse x:Name="ellipse"
                                             Width="20"
                                             Height="20"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center"
                                             Stroke="{StaticResource ControlBackgroundOver}"
                                             StrokeThickness="2" />
                                    <Path x:Name="arrow"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Data="M 0 0 L 4 4 L 8 0 Z"
                                          Fill="{StaticResource ControlForeground}" />
                                </Grid>
                                <Border.RenderTransform>
                                    <RotateTransform x:Name="rotate" Angle="0" />
                                </Border.RenderTransform>
                            </Border>
                            <ContentPresenter x:Name="Content"
                                              Grid.Column="1"
                                              Margin="4,3,0,3"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Center"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="True">
                                <ContentPresenter.LayoutTransform>
                                    <RotateTransform Angle="-90" />
                                </ContentPresenter.LayoutTransform>
                            </ContentPresenter>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="arrow" Property="Fill" Value="{StaticResource DisabledBrush}" />
                            <Setter TargetName="ellipse" Property="Stroke" Value="{StaticResource DisabledBrush}" />
                            <Setter Property="Opacity" Value="0.82" />
                            <Setter Property="Foreground" Value="{StaticResource DisabledForeground2}" />
                            <Setter TargetName="ellipse" Property="Opacity" Value=".6" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard TargetProperty="Angle">
                                        <DoubleAnimation Duration="0:0:1"
                                                         From="0"
                                                         Storyboard.TargetName="rotate"
                                                         To="180" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard TargetProperty="Angle">
                                        <DoubleAnimation Duration="0:0:1"
                                                         From="180"
                                                         Storyboard.TargetName="rotate"
                                                         To="360" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Expander}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4"
                            SnapsToDevicePixels="True">
                        <DockPanel>
                            <ToggleButton x:Name="ToggleButtonExpander"
                                          MinWidth="0"
                                          MinHeight="0"
                                          Margin="1,1,1,0"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Header}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          DockPanel.Dock="Top"
                                          FocusVisualStyle="{StaticResource FocusLine}"
                                          FontFamily="{TemplateBinding FontFamily}"
                                          FontSize="{TemplateBinding FontSize}"
                                          FontStretch="{TemplateBinding FontStretch}"
                                          FontStyle="{TemplateBinding FontStyle}"
                                          FontWeight="{TemplateBinding FontWeight}"
                                          Foreground="{TemplateBinding Foreground}"
                                          IsChecked="{Binding Path=IsExpanded,
                                                              Mode=TwoWay,
                                                              RelativeSource={RelativeSource TemplatedParent}}"
                                          Padding="{TemplateBinding Padding}"
                                          Style="{StaticResource ExpanderDownHeaderStyle}" />
                            <Grid x:Name="grid"
                                  Margin="5,0,0,0"
                                  Visibility="Collapsed">
                                <Grid.OpacityMask>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Offset="0" Color="Black" />
                                        <GradientStop x:Name="grstop_opacity" Offset="0.05" Color="Transparent" />
                                    </LinearGradientBrush>
                                </Grid.OpacityMask>
                                <Border x:Name="border"
                                        Margin="0"
                                        Background="{StaticResource ControlLightBackground}"
                                        BorderBrush="{StaticResource ControlBorderBrush}"
                                        BorderThickness="1"
                                        CornerRadius="5" />
                                <ContentPresenter x:Name="ContentExpander"
                                                  Margin="5"
                                                  HorizontalAlignment="Left"
                                                  VerticalAlignment="Top"
                                                  DockPanel.Dock="Bottom"
                                                  Focusable="False" />
                            </Grid>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetName="grstop_opacity" Storyboard.TargetProperty="Offset">
                                        <DoubleAnimation Duration="0:0:1.5"
                                                         From="0.05"
                                                         To="3" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                                            <DiscreteObjectKeyFrame KeyTime="0:0:1.5" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetName="grstop_opacity" Storyboard.TargetProperty="Offset">
                                        <DoubleAnimation Duration="0:0:1.5"
                                                         From="3"
                                                         To="0.05" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                                            <DiscreteObjectKeyFrame KeyTime="0:0:1.5" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Down">
                            <Setter TargetName="grid" Property="Margin" Value="1,0,1,0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForeground2}" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter TargetName="ContentExpander" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="ToggleButtonExpander" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="ToggleButtonExpander" Property="Style" Value="{StaticResource ExpanderRightHeaderStyle}" />
                            <Setter TargetName="border" Property="Background" Value="{StaticResource BackgroundExpanderRight}" />
                            <Setter TargetName="grid" Property="Margin" Value="0,1,0,1" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter TargetName="ContentExpander" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="ToggleButtonExpander" Property="DockPanel.Dock" Value="Bottom" />
                            <Setter TargetName="ToggleButtonExpander" Property="Style" Value="{StaticResource ExpanderUpHeaderStyle}" />
                            <Setter TargetName="border" Property="Background" Value="{StaticResource BackgroundExpanderBottom}" />
                            <Setter TargetName="grid" Property="Margin" Value="1,0,1,0" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter TargetName="ContentExpander" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="ToggleButtonExpander" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="ToggleButtonExpander" Property="Style" Value="{StaticResource ExpanderLeftHeaderStyle}" />
                            <Setter TargetName="border" Property="Background" Value="{StaticResource BackgroundExpanderLeft}" />
                            <Setter TargetName="grid" Property="Margin" Value="0,1,0,1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ListBox  -->
    <Style TargetType="{x:Type ListBox}">
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="Background" Value="{StaticResource ControlLightBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                        <ScrollViewer>
                            <ItemsPresenter Margin="4" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource DisabledBrush}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource DisabledForeground}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <ColorAnimation Duration="0:0:0.3"
                                            Storyboard.TargetName="content"
                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForeground}" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <ColorAnimation Duration="0:0:0.3"
                                            Storyboard.TargetName="content"
                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForegroundWhite}" />
                        </Storyboard>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimation Duration="0:0:0.3"
                                             Storyboard.TargetName="selected_bg"
                                             Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                             To="1" />
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimation Duration="0:0:0.3"
                                             Storyboard.TargetName="selected_bg"
                                             Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                             To="0" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid"
                          Margin="1,1,1,1"
                          Background="{TemplateBinding Background}"
                          SnapsToDevicePixels="True">
                        <Rectangle x:Name="bg"
                                   Fill="Transparent"
                                   IsHitTestVisible="False" />
                        <Rectangle x:Name="selected_bg"
                                   IsHitTestVisible="False"
                                   Opacity="0">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Offset="0" Color="{StaticResource HighlightComboBoxItem1}" />
                                    <GradientStop Offset="1" Color="{StaticResource HighlightComboBoxItem2}" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter x:Name="content"
                                          Margin="3"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource ControlForeground}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                                <BeginStoryboard Storyboard="{StaticResource SelectedOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource DisabledForeground}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
    </Style>

    <!--  Slider  -->
    <Style x:Key="HorizontalSliderThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Height" Value="18" />
        <Setter Property="Width" Value="18" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimation Duration="0:0:0.1"
                                             Storyboard.TargetName="center"
                                             Storyboard.TargetProperty="(Ellipse.Height)">
                                <DoubleAnimation.To>
                                    <system:Double>10</system:Double>
                                </DoubleAnimation.To>
                            </DoubleAnimation>
                            <DoubleAnimation Duration="0:0:0.1"
                                             Storyboard.TargetName="center"
                                             Storyboard.TargetProperty="(Ellipse.Width)">
                                <DoubleAnimation.To>
                                    <system:Double>10</system:Double>
                                </DoubleAnimation.To>
                            </DoubleAnimation>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimation Duration="0:0:0.1"
                                             Storyboard.TargetName="center"
                                             Storyboard.TargetProperty="(Ellipse.Height)">
                                <DoubleAnimation.To>
                                    <system:Double>14</system:Double>
                                </DoubleAnimation.To>
                            </DoubleAnimation>
                            <DoubleAnimation Duration="0:0:0.1"
                                             Storyboard.TargetName="center"
                                             Storyboard.TargetProperty="(Ellipse.Width)">
                                <DoubleAnimation.To>
                                    <system:Double>14</system:Double>
                                </DoubleAnimation.To>
                            </DoubleAnimation>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Background="Transparent">
                        <Ellipse Fill="{StaticResource ControlForegroundWhite}" Stretch="Fill" />
                        <Ellipse x:Name="center"
                                 Width="14"
                                 Height="14"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 Fill="{StaticResource ControlActiveBorderBrush}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="center" Property="Fill" Value="{StaticResource DisabledBrush}" />
                            <Setter Property="Opacity" Value=".8" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RepeatButtonLeft"
           BasedOn="{x:Null}"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="Height" Value="6" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Border x:Name="bg"
                                Background="{StaticResource BrushTrackProgressBar}"
                                CornerRadius="2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="bg" Property="Background" Value="{StaticResource DisabledBrush}" />
                            <Setter Property="Opacity" Value=".8" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RepeatButtonRight"
           BasedOn="{x:Null}"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="Height" Value="6" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Border x:Name="bg"
                                Background="{StaticResource ControlBackgroundNormal}"
                                CornerRadius="2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="bg" Property="Background" Value="{StaticResource DisabledBrush}" />
                            <Setter Property="Opacity" Value=".8" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Slider}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource ControlForeground}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusLine2}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Grid x:Name="GridRoot">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TickBar x:Name="TopTick"
                                 Height="5"
                                 Fill="{TemplateBinding Foreground}"
                                 Placement="Top"
                                 SnapsToDevicePixels="True"
                                 Visibility="Collapsed" />
                        <Border x:Name="Border"
                                Grid.Row="1"
                                Margin="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2" />
                        <Canvas Grid.Row="1"
                                Margin="0,-2,0,4"
                                VerticalAlignment="Center">
                            <Rectangle x:Name="PART_SelectionRange"
                                       Height="6"
                                       Fill="{StaticResource SliderSelectRange}"
                                       Visibility="Hidden" />
                        </Canvas>
                        <Track x:Name="PART_Track" Grid.Row="1">
                            <Track.Thumb>
                                <Thumb x:Name="thumb" Style="{StaticResource HorizontalSliderThumb}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="LeftRB"
                                              Command="Slider.IncreaseLarge"
                                              Style="{DynamicResource RepeatButtonRight}" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="RightRB"
                                              Command="Slider.DecreaseLarge"
                                              Style="{DynamicResource RepeatButtonLeft}" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                        <TickBar x:Name="BottomTick"
                                 Grid.Row="2"
                                 Height="5"
                                 Fill="{TemplateBinding Foreground}"
                                 Placement="Bottom"
                                 SnapsToDevicePixels="True"
                                 Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement" Value="TopLeft">
                            <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="BottomRight">
                            <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="Both">
                            <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                            <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForeground2}" />
                            <Setter Property="Opacity" Value="0.62" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="Orientation" Value="Horizontal" />
                        </Trigger>
                        <Trigger Property="IsSelectionRangeEnabled" Value="True">
                            <Setter TargetName="PART_SelectionRange" Property="Visibility" Value="Visible" />
                            <Setter TargetName="LeftRB" Property="Opacity" Value="0.8" />
                            <Setter TargetName="RightRB" Property="Opacity" Value="0.8" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1,1,1,1" />
    </Style>

    <!--  Calendar  -->
    <Style TargetType="{x:Type Calendar}">
        <Setter Property="Background" Value="{StaticResource ControlLightBackground}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CalendarButtonStyle" Value="{DynamicResource CalendarButtonStyle}" />
        <Setter Property="CalendarDayButtonStyle" Value="{DynamicResource CalendarDayButtonStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Calendar}">
                    <StackPanel x:Name="PART_Root" HorizontalAlignment="Center">
                        <CalendarItem x:Name="PART_CalendarItem"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CalendarItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarItem}">
                    <ControlTemplate.Resources>
                        <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
                            <TextBlock x:Name="txt"
                                       Margin="0,4,0,4"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontFamily="Verdana"
                                       FontSize="9.5"
                                       FontWeight="Bold"
                                       Foreground="{StaticResource ControlForeground}"
                                       Text="{Binding}" />
                        </DataTemplate>
                    </ControlTemplate.Resources>
                    <Grid x:Name="PART_Root">
                        <Border Margin="0,2,0,2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3">
                            <Border BorderBrush="{StaticResource ControlBorderBrush}"
                                    BorderThickness="2"
                                    CornerRadius="1">
                                <Grid>
                                    <Grid.Resources>
                                        <ControlTemplate x:Key="PreviousButtonTemplate" TargetType="{x:Type Button}">
                                            <Grid Background="Transparent" Cursor="Hand">
                                                <Path x:Name="path"
                                                      Width="6"
                                                      Height="10"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"
                                                      Data="M288.75,232.25 L288.75,240.625 L283,236.625 z"
                                                      Stretch="Fill">
                                                    <Path.Fill>
                                                        <SolidColorBrush Color="{StaticResource ColorForegroundWhite}" />
                                                    </Path.Fill>
                                                </Path>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <ColorAnimation Duration="0:0:0.3"
                                                                                Storyboard.TargetName="path"
                                                                                Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                                                                To="{StaticResource BorderBrushGradientColor2}" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.EnterActions>
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <ColorAnimation Duration="0:0:0.3"
                                                                                Storyboard.TargetName="path"
                                                                                Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                                                                To="{StaticResource ColorForegroundWhite}" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.ExitActions>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter TargetName="path" Property="Fill" Value="Black" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                        <ControlTemplate x:Key="NextButtonTemplate" TargetType="{x:Type Button}">
                                            <Grid Cursor="Hand">
                                                <Path x:Name="path"
                                                      Width="6"
                                                      Height="10"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"
                                                      Data="M282.875,231.875 L282.875,240.375 L288.625,236 z"
                                                      Stretch="Fill">
                                                    <Path.Fill>
                                                        <SolidColorBrush Color="{StaticResource ColorForegroundWhite}" />
                                                    </Path.Fill>
                                                </Path>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <ColorAnimation Duration="0:0:0.3"
                                                                                Storyboard.TargetName="path"
                                                                                Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                                                                To="{StaticResource BorderBrushGradientColor2}" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.EnterActions>
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <ColorAnimation Duration="0:0:0.3"
                                                                                Storyboard.TargetName="path"
                                                                                Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                                                                To="{StaticResource ColorForegroundWhite}" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.ExitActions>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter TargetName="path" Property="Fill" Value="Black" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                        <ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type Button}">
                                            <Grid Background="Transparent" Cursor="Hand">
                                                <ContentControl x:Name="buttonContent"
                                                                Margin="10,3,10,3"
                                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                Content="{TemplateBinding Content}"
                                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                Foreground="{StaticResource ControlForegroundWhite}"
                                                                IsTabStop="False" />
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <ColorAnimation Duration="0:0:0.3"
                                                                                Storyboard.TargetName="buttonContent"
                                                                                Storyboard.TargetProperty="(ContentControl.Foreground).(SolidColorBrush.Color)"
                                                                                To="{StaticResource ColorForeground}" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.EnterActions>
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <ColorAnimation Duration="0:0:0.3"
                                                                                Storyboard.TargetName="buttonContent"
                                                                                Storyboard.TargetProperty="(ContentControl.Foreground).(SolidColorBrush.Color)"
                                                                                To="{StaticResource ColorForegroundWhite}" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.ExitActions>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter TargetName="buttonContent" Property="Foreground" Value="Black" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Button x:Name="PART_PreviousButton"
                                            Grid.Row="0"
                                            Grid.Column="0"
                                            Width="25"
                                            Height="20"
                                            HorizontalAlignment="Left"
                                            Focusable="False"
                                            Template="{StaticResource PreviousButtonTemplate}" />
                                    <Button x:Name="PART_HeaderButton"
                                            Grid.Row="0"
                                            Grid.Column="1"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Focusable="False"
                                            FontSize="10.5"
                                            FontWeight="Bold"
                                            Template="{StaticResource HeaderButtonTemplate}" />
                                    <Button x:Name="PART_NextButton"
                                            Grid.Row="0"
                                            Grid.Column="2"
                                            Width="25"
                                            Height="20"
                                            HorizontalAlignment="Right"
                                            Focusable="False"
                                            Template="{StaticResource NextButtonTemplate}" />
                                    <Grid x:Name="PART_MonthView"
                                          Grid.Row="1"
                                          Grid.ColumnSpan="3"
                                          Margin="6,3,6,6"
                                          HorizontalAlignment="Center"
                                          Visibility="Visible">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                    </Grid>
                                    <Grid x:Name="PART_YearView"
                                          Grid.Row="1"
                                          Grid.ColumnSpan="3"
                                          Margin="6,3,7,6"
                                          HorizontalAlignment="Center"
                                          Visibility="Hidden">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                    </Grid>
                                </Grid>
                            </Border>
                        </Border>
                        <Rectangle x:Name="PART_DisabledVisual"
                                   Margin="0,2,0,2"
                                   Fill="{StaticResource DisabledBrush}"
                                   Opacity="0.6"
                                   RadiusX="2"
                                   RadiusY="2"
                                   Stretch="Fill"
                                   StrokeThickness="0"
                                   Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_DisabledVisual" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Year">
                            <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Decade">
                            <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CalendarButtonStyle" TargetType="{x:Type CalendarButton}">
        <Setter Property="Background" Value="{StaticResource HoverBackgroundCalendar}" />
        <Setter Property="MinWidth" Value="40" />
        <Setter Property="MinHeight" Value="42" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarButton}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.2" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.4" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="selectedText" Storyboard.TargetProperty="Color">
                                            <SplineColorKeyFrame KeyTime="0" Value="{StaticResource ColorForeground}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Active" />
                                <VisualState x:Name="Inactive">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="selectedText" Storyboard.TargetProperty="Color">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FF777777" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CalendarButtonFocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="CalendarButtonFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="CalendarButtonFocusVisual"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CalendarButtonUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="CalendarButtonFocusVisual"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="SelectedBackground"
                                   Fill="{TemplateBinding Background}"
                                   Opacity="0"
                                   RadiusX="3"
                                   RadiusY="3"
                                   Stroke="{StaticResource ControlActiveBorderBrush}" />
                        <Rectangle x:Name="Background"
                                   Fill="{TemplateBinding Background}"
                                   Opacity="0"
                                   RadiusX="3"
                                   RadiusY="3"
                                   Stroke="{StaticResource ControlBorderBrush}" />
                        <ContentControl x:Name="NormalText"
                                        Margin="1,0,1,1"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        FontSize="{TemplateBinding FontSize}"
                                        IsTabStop="False">
                            <ContentControl.Foreground>
                                <SolidColorBrush x:Name="selectedText" Color="#FFCCCCCC" />
                            </ContentControl.Foreground>
                        </ContentControl>
                        <Rectangle x:Name="CalendarButtonFocusVisual"
                                   IsHitTestVisible="False"
                                   RadiusX="3"
                                   RadiusY="3"
                                   Stroke="{StaticResource ControlActiveBorderBrush}"
                                   Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="CalendarButtonFocusVisual" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CalendarDayButtonStyle" TargetType="{x:Type CalendarDayButton}">
        <Setter Property="Background" Value="{StaticResource HoverBackgroundCalendar}" />
        <Setter Property="Foreground" Value="Lime" />
        <Setter Property="MinWidth" Value="5" />
        <Setter Property="MinHeight" Value="5" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarDayButton}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.45" />
                                        </DoubleAnimationUsingKeyFrames>

                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="NormalText" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".35" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".75" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="selectedText" Storyboard.TargetProperty="Color">
                                            <SplineColorKeyFrame KeyTime="0" Value="{StaticResource ColorForeground}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CalendarButtonFocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="CalendarButtonFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="DayButtonFocusVisual"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CalendarButtonUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="DayButtonFocusVisual"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Active" />
                                <VisualState x:Name="Inactive">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="selectedText" Storyboard.TargetProperty="Color">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FF777777" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DayStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="RegularDay" />
                                <VisualState x:Name="Today">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="TodayBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" />
                                        <ColorAnimation Duration="0"
                                                        Storyboard.TargetName="NormalText"
                                                        Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                        To="{StaticResource ColorForegroundWhite}" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BlackoutDayStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="NormalDay" />
                                <VisualState x:Name="BlackoutDay">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="Blackout"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To=".5" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="TodayBackground"
                                   Fill="{StaticResource TodayBackgroundBrush}"
                                   Opacity="0"
                                   RadiusX="3"
                                   RadiusY="3"
                                   Stroke="{StaticResource ControlBorderBrush}" />
                        <Rectangle x:Name="SelectedBackground"
                                   Fill="{TemplateBinding Background}"
                                   Opacity="0"
                                   RadiusX="3"
                                   RadiusY="3"
                                   Stroke="{StaticResource ControlBorderBrush}" />
                        <Rectangle x:Name="Background"
                                   Fill="{TemplateBinding Background}"
                                   Opacity="0"
                                   RadiusX="3"
                                   RadiusY="3"
                                   Stroke="{StaticResource ControlBorderBrush}" />
                        <ContentControl x:Name="NormalText"
                                        Margin="5,0,5,1"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        FontSize="{TemplateBinding FontSize}"
                                        IsTabStop="False">
                            <ContentControl.Foreground>
                                <SolidColorBrush x:Name="selectedText" Color="#FFCCCDDD" />
                            </ContentControl.Foreground>
                        </ContentControl>
                        <Path x:Name="Blackout"
                              Margin="3"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch"
                              Data="M8.1772461,11.029181 L10.433105,11.029181 L11.700684,12.801641 L12.973633,11.029181 L15.191895,11.029181 L12.844727,13.999395 L15.21875,17.060919 L12.962891,17.060919 L11.673828,15.256231 L10.352539,17.060919 L8.1396484,17.060919 L10.519043,14.042364 z"
                              Fill="{StaticResource ControlForeground}"
                              Opacity="0"
                              RenderTransformOrigin="0.5,0.5"
                              Stretch="Fill" />
                        <Rectangle x:Name="DayButtonFocusVisual"
                                   IsHitTestVisible="False"
                                   RadiusX="3"
                                   RadiusY="3"
                                   Stroke="{StaticResource ControlForegroundWhite}"
                                   Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  DatePicker  -->
    <Style TargetType="{x:Type DatePicker}">
        <Setter Property="IsTodayHighlighted" Value="True" />
        <Setter Property="SelectedDateFormat" Value="Short" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="CalendarStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Type Calendar}}" TargetType="{x:Type Calendar}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Grid x:Name="PART_Root"
                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <Grid.Resources>
                            <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type Button}">
                                <Grid>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualStateGroup.Transitions>
                                                <VisualTransition GeneratedDuration="0" />
                                                <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver" />
                                                <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed" />
                                                <VisualTransition From="Normal"
                                                                  GeneratedDuration="00:00:00.3000000"
                                                                  To="MouseOver" />
                                                <VisualTransition From="MouseOver"
                                                                  GeneratedDuration="00:00:00.5000000"
                                                                  To="Normal" />
                                                <VisualTransition From="Pressed"
                                                                  GeneratedDuration="00:00:00.5000000"
                                                                  To="MouseOver" />
                                                <VisualTransition From="MouseOver"
                                                                  GeneratedDuration="00:00:00.3000000"
                                                                  To="Pressed" />
                                            </VisualStateGroup.Transitions>
                                            <VisualState x:Name="Normal" />
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                   Duration="00:00:00.0010000"
                                                                                   Storyboard.TargetName="HoverBorder"
                                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                   Duration="00:00:00.0010000"
                                                                                   Storyboard.TargetName="Background"
                                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.7" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                   Duration="00:00:00.0010000"
                                                                                   Storyboard.TargetName="DisabledVisual"
                                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.65" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Grid Width="19"
                                          Height="18"
                                          Margin="0"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Background="#11FFFFFF"
                                          FlowDirection="LeftToRight">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="20*" />
                                            <ColumnDefinition Width="20*" />
                                            <ColumnDefinition Width="20*" />
                                            <ColumnDefinition Width="20*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="23*" />
                                            <RowDefinition Height="19*" />
                                            <RowDefinition Height="19*" />
                                            <RowDefinition Height="19*" />
                                        </Grid.RowDefinitions>
                                        <Border x:Name="HoverBorder"
                                                Grid.RowSpan="4"
                                                Grid.ColumnSpan="4"
                                                Background="{StaticResource HoverBackgroundCalendar}"
                                                BorderBrush="{x:Null}"
                                                BorderThickness="1"
                                                CornerRadius="0,0,1,1"
                                                Opacity="0" />
                                        <Rectangle Grid.RowSpan="1"
                                                   Grid.ColumnSpan="4"
                                                   Fill="{StaticResource ControlLightBackground}"
                                                   StrokeThickness="1" />
                                        <Ellipse Grid.ColumnSpan="4"
                                                 Width="3"
                                                 Height="3"
                                                 HorizontalAlignment="Center"
                                                 VerticalAlignment="Center"
                                                 Fill="{StaticResource ControlForegroundWhite}"
                                                 StrokeThickness="0" />
                                        <Border x:Name="DisabledVisual"
                                                Grid.Row="0"
                                                Grid.RowSpan="4"
                                                Grid.ColumnSpan="4"
                                                Background="{StaticResource DisabledBrush}"
                                                BorderBrush="{StaticResource DisabledBorderBrush}"
                                                BorderThickness="1"
                                                CornerRadius="0,0,.5,.5"
                                                Opacity="0" />
                                        <Border x:Name="Background"
                                                Grid.Row="1"
                                                Grid.RowSpan="3"
                                                Grid.ColumnSpan="4"
                                                Margin="0"
                                                Background="{StaticResource ControlBackgroundNormal}"
                                                CornerRadius=".5"
                                                Opacity="1" />
                                        <Path Grid.Row="1"
                                              Grid.RowSpan="3"
                                              Grid.Column="0"
                                              Grid.ColumnSpan="4"
                                              Margin="4,3"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Data="M11.426758,8.4305077 L11.749023,8.4305077 L11.749023,16.331387 L10.674805,16.331387 L10.674805,10.299648 L9.0742188,11.298672 L9.0742188,10.294277 C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 C10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077 z M14.65086,8.4305077 L18.566387,8.4305077 L18.566387,9.3435936 L15.671368,9.3435936 L15.671368,11.255703 C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 C17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 C18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 C18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 C15.560365,16.438808 14.951641,16.234707 14.468243,15.826504 L14.881817,14.929531 C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 C17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 C17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 C15.83071,11.873379 15.399232,12.079271 15.016094,12.491055 L14.65086,12.238613 z"
                                              Fill="{StaticResource ControlForeground}"
                                              RenderTransformOrigin="0.5,0.5"
                                              Stretch="Fill" />
                                    </Grid>
                                </Grid>
                            </ControlTemplate>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <DatePickerTextBox x:Name="PART_TextBox"
                                           Grid.Row="0"
                                           Grid.Column="0"
                                           Height="{TemplateBinding Height}"
                                           VerticalContentAlignment="Center" />
                        <Grid x:Name="PART_DisabledVisual"
                              Grid.Row="0"
                              Grid.Column="0"
                              Grid.ColumnSpan="2"
                              IsHitTestVisible="False"
                              Opacity="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Popup x:Name="PART_Popup"
                                   AllowsTransparency="True"
                                   Placement="Bottom"
                                   PlacementTarget="{Binding ElementName=PART_TextBox}"
                                   StaysOpen="False" />
                            <Rectangle Grid.Row="0"
                                       Grid.Column="0"
                                       Fill="#a6FFFFFF"
                                       RadiusX="1"
                                       RadiusY="1" />
                            <Rectangle Grid.Row="0"
                                       Grid.Column="1"
                                       Width="19"
                                       Height="18"
                                       Margin="3,0,3,0"
                                       Fill="#a6FFFFFF"
                                       RadiusX="1"
                                       RadiusY="1" />
                        </Grid>
                        <Button x:Name="PART_Button"
                                Grid.Row="0"
                                Grid.Column="1"
                                Width="20"
                                Margin="3,0,3,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Focusable="False"
                                Foreground="{TemplateBinding Foreground}"
                                Template="{StaticResource DropDownButtonTemplate}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DatePickerTextBox}">
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
        <Setter Property="Background" Value="{StaticResource ControlLightBackground}" />
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CaretBrush" Value="{StaticResource ControlForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
                    <Grid>
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2"
                                Opacity="1">
                            <Grid>
                                <Border BorderThickness="1" CornerRadius="1">
                                    <Border.BorderBrush>
                                        <SolidColorBrush x:Name="MouseOverColor" Color="Transparent" />
                                    </Border.BorderBrush>
                                    <ScrollViewer x:Name="PART_ContentHost"
                                                  Margin="0"
                                                  Background="{TemplateBinding Background}" />
                                </Border>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ControlActiveBorderBrush}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1.8" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ControlActiveBorderBrush}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1.8" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource DisabledBrush}" />
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource DisabledForeground}" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Text" Value="--/--/--" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ListView  -->
    <!--  ListView  -->
    <Style TargetType="{x:Type ListView}">
        <Setter Property="Background" Value="{StaticResource ControlLightBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2">
                        <ScrollViewer Padding="{TemplateBinding Padding}" Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource DisabledBrush}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <DockPanel Margin="{TemplateBinding Padding}">
                            <ScrollViewer DockPanel.Dock="Top"
                                          Focusable="False"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden">
                                <GridViewHeaderRowPresenter Margin="2,0,2,0"
                                                            AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder,
                                                                                          RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle,
                                                                                                 RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu,
                                                                                              RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate,
                                                                                           RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector,
                                                                                                   RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip,
                                                                                          RelativeSource={RelativeSource TemplatedParent}}"
                                                            Columns="{Binding Path=TemplatedParent.View.Columns,
                                                                              RelativeSource={RelativeSource TemplatedParent}}"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    KeyboardNavigation.DirectionalNavigation="Local"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </DockPanel>
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Grid.Column="1"
                                   Cursor="Arrow"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   Minimum="0.0"
                                   Orientation="Vertical"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{Binding Path=VerticalOffset,
                                                   Mode=OneWay,
                                                   RelativeSource={RelativeSource TemplatedParent}}" />
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   Grid.Row="1"
                                   Cursor="Arrow"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   Minimum="0.0"
                                   Orientation="Horizontal"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Value="{Binding Path=HorizontalOffset,
                                                   Mode=OneWay,
                                                   RelativeSource={RelativeSource TemplatedParent}}" />
                        <DockPanel Grid.Row="1"
                                   Grid.Column="1"
                                   Background="{Binding Path=Background,
                                                        ElementName=PART_VerticalScrollBar}"
                                   LastChildFill="False">
                            <Rectangle Width="1"
                                       DockPanel.Dock="Left"
                                       Fill="White"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                            <Rectangle Height="1"
                                       DockPanel.Dock="Top"
                                       Fill="White"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                        </DockPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ListViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle RadiusX="2"
                               RadiusY="2"
                               Stroke="{StaticResource ControlActiveBorderBrush}"
                               StrokeDashArray="1 2"
                               StrokeThickness="1.5" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource ListViewItemFocusVisual}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListView}}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="0,0,0,1" />
        <Setter Property="Padding" Value="5,2" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <ColorAnimation Duration="0:0:0.2"
                                            Storyboard.TargetName="row_content"
                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForeground}" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <ColorAnimation Duration="0:0:0.2"
                                            Storyboard.TargetName="row_content"
                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForegroundWhite}" />
                        </Storyboard>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimation Duration="0:0:0.2"
                                             Storyboard.TargetName="HoverSelected"
                                             Storyboard.TargetProperty="(UIElement.Opacity)"
                                             To="1" />
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimation Duration="0:0:0.2"
                                             Storyboard.TargetName="HoverSelected"
                                             Storyboard.TargetProperty="(UIElement.Opacity)"
                                             To="0" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2"
                            SnapsToDevicePixels="True">
                        <Grid Margin="2,0">
                            <Rectangle x:Name="Background"
                                       Fill="{TemplateBinding Background}"
                                       IsHitTestVisible="False"
                                       RadiusX="0"
                                       Stroke="{TemplateBinding BorderBrush}"
                                       StrokeThickness="{TemplateBinding BorderThickness}" />
                            <Rectangle x:Name="HoverSelected"
                                       IsHitTestVisible="False"
                                       Opacity="0"
                                       RadiusX="0">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Offset="0" Color="{StaticResource HighlightComboBoxItem1}" />
                                        <GradientStop Offset="1" Color="{StaticResource HighlightComboBoxItem2}" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Border Background="Transparent">
                                <GridViewRowPresenter x:Name="row_content"
                                                      Margin="0,2"
                                                      VerticalAlignment="Stretch"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource DisabledForeground3}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
        <Setter Property="Canvas.Right" Value="-8.5" />
        <Setter Property="Width" Value="18" />
        <Setter Property="Height" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Padding" Value="0,3,0,4" />
        <Setter Property="Background" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="#00FFFFFF" Padding="{TemplateBinding Padding}">
                        <Rectangle Width=".5"
                                   HorizontalAlignment="Center"
                                   Fill="White" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type GridViewColumnHeader}" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Offset="0" Color="{StaticResource HighlightComboBoxItem1}" />
                    <GradientStop Offset="1" Color="{StaticResource HighlightComboBoxItem2}" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{StaticResource ControlForeground}" />
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Storyboard.TargetName="HoverBorder"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Storyboard.TargetName="HoverBorder"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Storyboard.TargetName="Main"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value=".8" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Storyboard.TargetName="Main"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Margin="0,1">
                        <Grid>
                            <Border x:Name="Main"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderThickness}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="0"
                                    Padding="{TemplateBinding Padding}" />
                            <Border x:Name="HoverBorder"
                                    Background="{StaticResource ControlBackgroundLine}"
                                    BorderBrush="{x:Null}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="0"
                                    Opacity="0"
                                    Padding="{TemplateBinding Padding}" />
                            <Border BorderBrush="{StaticResource ControlForegroundWhite}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}">
                                <ContentPresenter Margin="2"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  RecognizesAccessKey="True" />
                            </Border>
                        </Grid>
                        <Canvas>
                            <Thumb x:Name="PART_HeaderGripper"
                                   HorizontalAlignment="Stretch"
                                   Style="{StaticResource GridViewColumnHeaderGripper}" />
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="Height" Value="Auto">
                            <Setter Property="MinHeight" Value="24" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForeground2}" />
                            <Setter TargetName="Main" Property="Opacity" Value=".6" />
                        </Trigger>
                        <Trigger Property="Role" Value="Padding">
                            <Setter TargetName="PART_HeaderGripper" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Role" Value="Floating">
                            <Setter TargetName="PART_HeaderGripper" Property="Visibility" Value="Collapsed" />
                            <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  TreeView  -->
    <Style TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="{StaticResource ControlLightBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Grid>
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{DynamicResource SolidBorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3">
                            <ScrollViewer CanContentScroll="False"
                                          Focusable="False"
                                          HorizontalScrollBarVisibility="Auto"
                                          Padding="4"
                                          VerticalScrollBarVisibility="Auto">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource DisabledBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TreeViewItemToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="CheckedOn">
                            <DoubleAnimation Duration="0:0:0.4"
                                             Storyboard.TargetName="rotate"
                                             Storyboard.TargetProperty="(RotateTransform.Angle)"
                                             To="90" />
                        </Storyboard>
                        <Storyboard x:Key="CheckedOff">
                            <DoubleAnimation Duration="0:0:0.4"
                                             Storyboard.TargetName="rotate"
                                             Storyboard.TargetProperty="(RotateTransform.Angle)"
                                             To="0" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOn">
                            <ColorAnimation Duration="0:0:0.3"
                                            Storyboard.TargetName="expand_path"
                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForegroundWhite}" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <ColorAnimation Duration="0:0:0.3"
                                            Storyboard.TargetName="expand_path"
                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForeground}" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Width="16"
                          Height="16"
                          Background="Transparent">
                        <Path x:Name="expand_path"
                              Margin="1"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="M 0 0 L 4 4 L 0 8 Z"
                              RenderTransformOrigin="0.5,0.5">
                            <Path.Fill>
                                <SolidColorBrush Color="{StaticResource ColorForeground}" />
                            </Path.Fill>
                            <Path.LayoutTransform>
                                <RotateTransform x:Name="rotate" Angle="0" />
                            </Path.LayoutTransform>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource CheckedOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource CheckedOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="expand_path" Property="Fill">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource DisabledForeground}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="1,0,0,0" />
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusLine}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <ColorAnimation Duration="0:0:0.3"
                                            Storyboard.TargetName="PART_Header"
                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForeground}" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <ColorAnimation Duration="0:0:0.3"
                                            Storyboard.TargetName="PART_Header"
                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForegroundWhite}" />
                        </Storyboard>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="0:0:0"
                                                           Storyboard.TargetName="selected"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="0:0:0"
                                                           Storyboard.TargetName="selected"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedHoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="0:0:0"
                                                           Storyboard.TargetName="selected_hover"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedHoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="0:0:0"
                                                           Storyboard.TargetName="selected_hover"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MinWidth="18" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander"
                                      ClickMode="Press"
                                      IsChecked="{Binding Path=IsExpanded,
                                                          RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{DynamicResource TreeViewItemToggleButton}" />
                        <Border x:Name="Selection_Border"
                                Grid.Column="1"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <Grid>
                                <Border x:Name="selected" Opacity="0">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Offset="0" Color="{StaticResource HighlightComboBoxItem1}" />
                                            <GradientStop Offset="1" Color="{StaticResource HighlightComboBoxItem2}" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                                <ContentPresenter x:Name="PART_Header"
                                                  Margin="5,4"
                                                  HorizontalAlignment="Stretch"
                                                  ContentSource="Header" />
                                <Border x:Name="selected_hover"
                                        Background="{StaticResource ControlBackgroundLine}"
                                        BorderBrush="{x:Null}"
                                        BorderThickness="1"
                                        CornerRadius="2"
                                        Opacity="0" />
                            </Grid>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost"
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        Grid.ColumnSpan="2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedHoverOn}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedHoverOff}" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition SourceName="Selection_Border" Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Selection_Border" Property="Background" Value="{StaticResource ControlForeground}" />
                            <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource DisabledForeground}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  DataGrid  -->
    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="{StaticResource ControlLightBackground}" />
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="False">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Grid.Resources>
                                            <ControlTemplate x:Key="SelectAllButtonTemplate" TargetType="{x:Type Button}">
                                                <ControlTemplate.Resources>
                                                    <Storyboard x:Key="HoverOn">
                                                        <ColorAnimation Duration="0:0:0.3"
                                                                        Storyboard.TargetName="path"
                                                                        Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                                                        To="{StaticResource ColorForeground}" />
                                                    </Storyboard>
                                                    <Storyboard x:Key="HoverOff">
                                                        <ColorAnimation Duration="0:0:0.3"
                                                                        Storyboard.TargetName="path"
                                                                        Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                                                        To="{StaticResource ColorForegroundWhite}" />
                                                    </Storyboard>
                                                    <Storyboard x:Key="PressedOn">
                                                        <DoubleAnimationUsingKeyFrames BeginTime="0:0:0"
                                                                                       Storyboard.TargetName="Background"
                                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                                            <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0.6" />
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                    <Storyboard x:Key="PressedOff">
                                                        <DoubleAnimationUsingKeyFrames BeginTime="0:0:0"
                                                                                       Storyboard.TargetName="Background"
                                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                                            <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="1" />
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </ControlTemplate.Resources>
                                                <Grid x:Name="Grid">
                                                    <Border x:Name="Background"
                                                            Background="#FF585555"
                                                            BorderThickness="0">
                                                        <Path x:Name="path"
                                                              HorizontalAlignment="Center"
                                                              VerticalAlignment="Center"
                                                              Data="F 1 M -2,8 L 6,8 6,0 Z"
                                                              Fill="{StaticResource ControlForegroundWhite}" />
                                                    </Border>
                                                    <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                      RecognizesAccessKey="True" />
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsDefault" Value="True">
                                                        <Setter TargetName="Background" Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Trigger.EnterActions>
                                                            <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                                                        </Trigger.EnterActions>
                                                        <Trigger.ExitActions>
                                                            <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                                                        </Trigger.ExitActions>
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Trigger.EnterActions>
                                                            <BeginStoryboard Storyboard="{StaticResource PressedOn}" />
                                                        </Trigger.EnterActions>
                                                        <Trigger.ExitActions>
                                                            <BeginStoryboard Storyboard="{StaticResource PressedOff}" />
                                                        </Trigger.ExitActions>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter TargetName="Background" Property="Background" Value="{StaticResource DisabledBrush}" />
                                                        <Setter TargetName="path" Property="Fill">
                                                            <Setter.Value>
                                                                <SolidColorBrush Color="{StaticResource DisabledForeground}" />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Grid.Resources>
                                        <Button Width="23"
                                                Margin="0,-1,0,0"
                                                Command="{x:Static DataGrid.SelectAllCommand}"
                                                Focusable="False"
                                                Template="{StaticResource SelectAllButtonTemplate}"
                                                Visibility="{Binding HeadersVisibility,
                                                                     ConverterParameter={x:Static DataGridHeadersVisibility.All},
                                                                     Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                                                     RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <Border Grid.Column="1"
                                                Margin="-2,-3,-2,-2"
                                                Background="{StaticResource ControlBackgroundNormal}"
                                                BorderThickness="2">
                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        </Border>
                                        <Rectangle Grid.Column="2"
                                                   Fill="Transparent"
                                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                                Grid.Row="1"
                                                                Grid.ColumnSpan="2"
                                                                Margin="1,0"
                                                                CanContentScroll="{TemplateBinding CanContentScroll}" />
                                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                                   Grid.Row="1"
                                                   Grid.Column="2"
                                                   Maximum="{TemplateBinding ScrollableHeight}"
                                                   Orientation="Vertical"
                                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                   Value="{Binding VerticalOffset,
                                                                   Mode=OneWay,
                                                                   RelativeSource={RelativeSource TemplatedParent}}" />
                                        <Grid Grid.Row="2" Grid.Column="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                       Grid.Column="1"
                                                       Maximum="{TemplateBinding ScrollableWidth}"
                                                       Orientation="Horizontal"
                                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                       Value="{Binding HorizontalOffset,
                                                                       Mode=OneWay,
                                                                       RelativeSource={RelativeSource TemplatedParent}}" />
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="True">
                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Arrow" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid x:Name="Root" Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CurrentStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Regular" />
                                <VisualState x:Name="Current">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".9" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Editing">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="VerticalSeparator"
                                   Width="1"
                                   Fill="{StaticResource ControlForegroundWhite}" />
                        <Rectangle x:Name="FocusVisual"
                                   Grid.Column="1"
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Stretch"
                                   Fill="Transparent"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   Stroke="#FFEEEEEE"
                                   StrokeThickness="0,0,0,1.2" />
                        <ContentPresenter Grid.Column="1"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Cursor="{TemplateBinding Cursor}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource DisabledForeground}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type DataGridRow}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Margin="2,0,0,0"
                               VerticalAlignment="Center"
                               Foreground="Red"
                               Text="!" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <SelectiveScrollingGrid Margin="0,1,0,0" Background="{TemplateBinding Background}">
                        <SelectiveScrollingGrid.Resources>
                            <Storyboard x:Key="DetailsVisibleTransition">
                                <DoubleAnimation Duration="00:00:0.1"
                                                 Storyboard.TargetName="DetailsPresenter"
                                                 Storyboard.TargetProperty="ContentHeight" />
                            </Storyboard>
                        </SelectiveScrollingGrid.Resources>
                        <SelectiveScrollingGrid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </SelectiveScrollingGrid.ColumnDefinitions>
                        <SelectiveScrollingGrid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </SelectiveScrollingGrid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                    <VisualTransition From="Normal"
                                                      GeneratedDuration="00:00:00.3000000"
                                                      To="MouseOver" />
                                    <VisualTransition From="MouseOver"
                                                      GeneratedDuration="00:00:00.5000000"
                                                      To="Normal" />
                                    <VisualTransition From="Normal"
                                                      GeneratedDuration="00:00:00.3000000"
                                                      To="MouseOver_Selected" />
                                    <VisualTransition From="MouseOver_Selected"
                                                      GeneratedDuration="00:00:00.5000000"
                                                      To="Normal" />
                                    <VisualTransition From="Normal"
                                                      GeneratedDuration="00:00:00.3000000"
                                                      To="Normal_Selected" />
                                    <VisualTransition From="Normal_Selected"
                                                      GeneratedDuration="00:00:00.5000000"
                                                      To="Normal" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Normal_AlternatingRow" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="HoverRectangle"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal_Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="SelectedRectangle"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver_Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="HoverRectangle"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="SelectedRectangle"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused_Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="SelectedRectangle"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="BackgroundRectangle"
                                   Grid.RowSpan="2"
                                   Grid.ColumnSpan="2"
                                   Fill="{StaticResource DataGridRow}" />
                        <Rectangle x:Name="SelectedRectangle"
                                   Grid.RowSpan="2"
                                   Grid.ColumnSpan="2"
                                   Fill="{StaticResource ControlBackgroundOver}"
                                   Opacity="0" />
                        <Rectangle x:Name="HoverRectangle"
                                   Grid.RowSpan="2"
                                   Grid.ColumnSpan="2"
                                   Fill="{StaticResource DataGridRowHover}"
                                   Opacity="0" />
                        <DataGridRowHeader x:Name="RowHeader"
                                           Grid.RowSpan="3"
                                           SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                           Visibility="{Binding HeadersVisibility,
                                                                ConverterParameter={x:Static DataGridHeadersVisibility.Row},
                                                                Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                                                RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                        <DataGridCellsPresenter x:Name="CellsPresenter"
                                                Grid.Column="1"
                                                ItemsPanel="{TemplateBinding ItemsPanel}"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <DataGridDetailsPresenter x:Name="DetailsPresenter"
                                                  Grid.Row="1"
                                                  Grid.Column="1"
                                                  SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen,
                                                                                                                 ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical},
                                                                                                                 Converter={x:Static DataGrid.RowDetailsScrollingConverter},
                                                                                                                 RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                  Visibility="{TemplateBinding DetailsVisibility}" />
                    </SelectiveScrollingGrid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Height" Value="4" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeNS" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <BooleanToVisibilityConverter x:Key="boolConverter" />

    <Style TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="SeparatorBrush" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="SeparatorVisibility" Value="Collapsed" />
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="00:00:0.2" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CurrentRowGlyph" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="EditingRowGlyph" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="HoverRectangle"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver_CurrentRow_Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CurrentRowGlyph" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="EditingRowGlyph" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="SelectedRectangle"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="HoverRectangle"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal_CurrentRow">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CurrentRowGlyph" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="EditingRowGlyph" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="SelectedRectangle"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal_Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CurrentRowGlyph" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="EditingRowGlyph" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="grid"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal_EditingRow">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CurrentRowGlyph" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="EditingRowGlyph" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="grid"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border>
                            <Grid x:Name="grid"
                                  Width="Auto"
                                  Height="Auto">
                                <Rectangle Fill="{StaticResource DataGridRow}" Stretch="Fill" />
                                <Rectangle x:Name="SelectedRectangle"
                                           Fill="Transparent"
                                           Opacity="0"
                                           Stretch="Fill" />
                                <Rectangle x:Name="HoverRectangle"
                                           Fill="{StaticResource ControlBackgroundLine}"
                                           Opacity="0"
                                           Stretch="Fill" />
                            </Grid>
                        </Border>
                        <StackPanel Orientation="Horizontal">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Content="{TemplateBinding Content}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Control SnapsToDevicePixels="False"
                                     Template="{Binding ValidationErrorTemplate,
                                                        RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"
                                     Visibility="{Binding (Validation.HasError),
                                                          Converter={StaticResource boolConverter},
                                                          RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" />
                        </StackPanel>
                        <Path x:Name="CurrentRowGlyph"
                              Width="6"
                              Height="10"
                              Margin="8,0,8,0"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="F1 M 511.047,352.682L 511.047,342.252L 517.145,347.467L 511.047,352.682 Z "
                              Fill="{StaticResource ControlForeground}"
                              Opacity="0"
                              Stretch="Fill" />
                        <Path x:Name="EditingRowGlyph"
                              Width="6"
                              Height="10"
                              Margin="8,0,8,0"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="F1 M 511.047,352.682L 511.047,342.252L 517.145,347.467L 511.047,352.682 Z "
                              Fill="{StaticResource ControlForeground}"
                              Opacity="0"
                              Stretch="Fill" />
                        <Thumb x:Name="PART_TopHeaderGripper"
                               VerticalAlignment="Top"
                               Style="{StaticResource RowHeaderGripperStyle}" />
                        <Thumb x:Name="PART_BottomHeaderGripper"
                               VerticalAlignment="Bottom"
                               Style="{StaticResource RowHeaderGripperStyle}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Foreground" Value="{StaticResource ControlForeground}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="SeparatorBrush" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="Padding" Value="4,4,5,4" />
        <Setter Property="MinHeight" Value="26" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="00:00:0.1" />
                                    <VisualTransition From="Normal"
                                                      GeneratedDuration="00:00:00.3000000"
                                                      To="MouseOver" />
                                    <VisualTransition From="MouseOver"
                                                      GeneratedDuration="00:00:00.5000000"
                                                      To="Normal" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.001"
                                                                       Storyboard.TargetName="HoverRectangle"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SortStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="00:00:0.2" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unsorted" />
                                <VisualState x:Name="SortAscending">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1.0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SortDescending">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1.0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SortIconTransform" Storyboard.TargetProperty="ScaleY">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="-.9" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <StackPanel x:Name="VerticalSeparator"
                                    Grid.RowSpan="2"
                                    Orientation="Horizontal">
                            <Rectangle Width="1"
                                       VerticalAlignment="Stretch"
                                       Fill="{TemplateBinding SeparatorBrush}"
                                       Visibility="{TemplateBinding SeparatorVisibility}" />
                        </StackPanel>
                        <Thumb x:Name="PART_LeftHeaderGripper"
                               Grid.RowSpan="3"
                               HorizontalAlignment="Left"
                               Style="{StaticResource ColumnHeaderGripperStyle}" />
                        <Rectangle x:Name="HoverRectangle"
                                   Grid.RowSpan="3"
                                   Grid.Column="0"
                                   Grid.ColumnSpan="3"
                                   Fill="{StaticResource ControlBackgroundLine}"
                                   Opacity="0"
                                   Stretch="Fill" />
                        <Rectangle x:Name="BackgroundRectangle"
                                   Grid.RowSpan="2"
                                   Grid.Column="1"
                                   Grid.ColumnSpan="2"
                                   Fill="{TemplateBinding Background}" />
                        <ContentPresenter Grid.RowSpan="2"
                                          Grid.Column="1"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          Cursor="{TemplateBinding Cursor}" />
                        <Path x:Name="SortIcon"
                              Grid.RowSpan="2"
                              Grid.Column="2"
                              Width="8"
                              Margin="0,0,8,0"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Center"
                              Data="F1 M -5.215,6.099L 5.215,6.099L 0,0L -5.215,6.099 Z "
                              Fill="{StaticResource ControlForegroundWhite}"
                              Opacity="0"
                              RenderTransformOrigin=".5,.5"
                              Stretch="Uniform">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform x:Name="SortIconTransform"
                                                    ScaleX=".9"
                                                    ScaleY=".9" />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                        <Thumb x:Name="PART_RightHeaderGripper"
                               Grid.RowSpan="3"
                               Grid.Column="2"
                               HorizontalAlignment="Right"
                               Style="{StaticResource ColumnHeaderGripperStyle}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource DisabledForeground}" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background" Value="{StaticResource DisabledBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridColumnHeadersPresenter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeadersPresenter}">
                    <Grid>
                        <DataGridColumnHeader x:Name="PART_FillerColumnHeader" IsHitTestVisible="False" />
                        <ItemsPresenter />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ToolBar  -->
    <Style x:Key="ToolBarButtonBaseStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusLine}" />
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Margin" Value="0,2" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimation Duration="0:0:0.3"
                                             Storyboard.TargetName="Hover"
                                             Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                             To="1" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimation Duration="0:0:0.3"
                                             Storyboard.TargetName="Hover"
                                             Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                             To="0" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border x:Name="Bg"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Border x:Name="Hover"
                                    Background="{StaticResource ControlLightBackground}"
                                    Opacity="0" />
                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bg" Property="Background" Value="{StaticResource DisabledBrush}" />
                            <Setter TargetName="Bg" Property="Opacity" Value=".95" />
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource DisabledForeground}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static ToolBar.ButtonStyleKey}"
           BasedOn="{StaticResource ToolBarButtonBaseStyle}"
           TargetType="{x:Type Button}" />
    <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}"
           BasedOn="{StaticResource ToolBarButtonBaseStyle}"
           TargetType="{x:Type ToggleButton}" />
    <Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}"
           BasedOn="{StaticResource ToolBarButtonBaseStyle}"
           TargetType="{x:Type CheckBox}">
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource ToolBarCheckedButton}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}"
           BasedOn="{StaticResource ToolBarButtonBaseStyle}"
           TargetType="{x:Type RadioButton}">
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource ToolBarCheckedButton}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Static ToolBar.ComboBoxStyleKey}"
           BasedOn="{StaticResource {x:Type ComboBox}}"
           TargetType="{x:Type ComboBox}" />
    <Style x:Key="{x:Static ToolBar.TextBoxStyleKey}"
           BasedOn="{StaticResource {x:Type TextBox}}"
           TargetType="{x:Type TextBox}" />

    <Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="brd"
                            Background="Transparent"
                            CornerRadius="0"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                        <Rectangle>
                            <Rectangle.Fill>
                                <DrawingBrush TileMode="Tile"
                                              Viewbox="0,0,4,4"
                                              ViewboxUnits="Absolute"
                                              Viewport="0,0,4,4"
                                              ViewportUnits="Absolute">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <GeometryDrawing x:Name="gd1"
                                                             Brush="{StaticResource ControlForeground}"
                                                             Geometry="M 1 1 L 1 3 L 3 3 L 3 1 z" />
                                            <GeometryDrawing x:Name="gd2"
                                                             Brush="{StaticResource ControlForeground}"
                                                             Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z" />
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="SizeAll" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolBarHorizontalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimation Duration="0:0:0.3"
                                             Storyboard.TargetName="hover"
                                             Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                             To=".8" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimation Duration="0:0:0.3"
                                             Storyboard.TargetName="hover"
                                             Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                             To="0" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="Bd" Background="{StaticResource SelectedBackgroundBrushToolBar}">
                        <Border x:Name="hover"
                                Background="{StaticResource ControlActiveBorderBrush}"
                                Opacity="0" />
                        <Canvas Width="6"
                                Height="7"
                                Margin="7,2,2,2"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                SnapsToDevicePixels="True">
                            <Path Data="M 1 1.5 L 6 1.5" Stroke="White" />
                            <Path Data="M 0 0.5 L 5 0.5" Stroke="{TemplateBinding Foreground}" />
                            <Path Data="M 0.5 4 L 6.5 4 L 3.5 7 Z" Fill="White" />
                            <Path Data="M -0.5 3 L 5.5 3 L 2.5 6 Z" Fill="{TemplateBinding Foreground}" />
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ControlActiveBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource DisabledForeground}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolBarVerticalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimation Duration="0:0:0.3"
                                             Storyboard.TargetName="hover"
                                             Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                             To=".8" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimation Duration="0:0:0.3"
                                             Storyboard.TargetName="hover"
                                             Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                             To="0" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="Bd"
                          Background="{StaticResource SelectedBackgroundBrushToolBar}"
                          SnapsToDevicePixels="True">
                        <Border x:Name="hover"
                                Background="{StaticResource ControlActiveBorderBrush}"
                                Opacity="0" />
                        <Canvas Width="7"
                                Height="6"
                                Margin="2,7,2,2"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                SnapsToDevicePixels="True">
                            <Path Data="M 1.5 1 L 1.5 6" Stroke="White" />
                            <Path Data="M 0.5 0 L 0.5 5" Stroke="{TemplateBinding Foreground}" />
                            <Path Data="M 3.5 0.5 L 7 3.5 L 4 6.5 Z" Fill="White" />
                            <Path Data="M 3 -0.5 L 6 2.5 L 3 5.5 Z" Fill="{TemplateBinding Foreground}" />
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ControlActiveBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource DisabledForeground}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToolBar}">
        <Setter Property="Background" Value="{StaticResource DataGridRowHover}" />
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolBar}">
                    <Grid x:Name="Grid"
                          Margin="3,1,1,1"
                          SnapsToDevicePixels="True">
                        <Grid x:Name="OverflowGrid" HorizontalAlignment="Right">
                            <ToggleButton x:Name="OverflowButton"
                                          ClickMode="Press"
                                          FocusVisualStyle="{x:Null}"
                                          IsChecked="{Binding Path=IsOverflowOpen,
                                                              Mode=TwoWay,
                                                              RelativeSource={RelativeSource TemplatedParent}}"
                                          IsEnabled="{TemplateBinding HasOverflowItems}"
                                          Style="{StaticResource ToolBarHorizontalOverflowButtonStyle}" />
                            <Popup x:Name="OverflowPopup"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   IsOpen="{Binding Path=IsOverflowOpen,
                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                   Placement="Bottom"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                   StaysOpen="False">
                                <Border x:Name="Shdw">
                                    <Border Background="{StaticResource DataGridRowHover}"
                                            BorderBrush="{StaticResource ControlBorderBrush}"
                                            BorderThickness="1">
                                        <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel"
                                                              Margin="2"
                                                              FocusVisualStyle="{x:Null}"
                                                              Focusable="True"
                                                              KeyboardNavigation.DirectionalNavigation="Cycle"
                                                              KeyboardNavigation.TabNavigation="Cycle"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                              WrapWidth="200" />
                                    </Border>
                                </Border>
                            </Popup>
                        </Grid>
                        <Border x:Name="MainPanelBorder"
                                Margin="0,0,11,0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="0"
                                Padding="{TemplateBinding Padding}">
                            <Grid>
                                <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                                    <Thumb x:Name="ToolBarThumb"
                                           Width="10"
                                           Margin="-3,0,0,0"
                                           Padding="6,5,1,5"
                                           Style="{StaticResource ToolBarThumbStyle}" />
                                    <ContentPresenter x:Name="ToolBarHeader"
                                                      Margin="4,0,4,0"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"
                                                      ContentSource="Header"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    <ToolBarPanel x:Name="PART_ToolBarPanel"
                                                  Margin="0,1,2,2"
                                                  Background="{TemplateBinding Background}"
                                                  IsItemsHost="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </DockPanel>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsOverflowOpen" Value="True">
                            <Setter TargetName="ToolBarThumb" Property="IsEnabled" Value="False" />
                        </Trigger>
                        <Trigger Property="Header" Value="{x:Null}">
                            <Setter TargetName="ToolBarHeader" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ToolBarTray.IsLocked" Value="True">
                            <Setter TargetName="ToolBarThumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger SourceName="OverflowPopup" Property="HasDropShadow" Value="True">
                            <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
                            <Setter TargetName="Shdw" Property="SnapsToDevicePixels" Value="True" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="Grid" Property="Margin" Value="1,3,1,1" />
                            <Setter TargetName="OverflowButton" Property="Style" Value="{StaticResource ToolBarVerticalOverflowButtonStyle}" />
                            <Setter TargetName="ToolBarThumb" Property="Height" Value="10" />
                            <Setter TargetName="ToolBarThumb" Property="Width" Value="Auto" />
                            <Setter TargetName="ToolBarThumb" Property="Margin" Value="-1,-3,0,0" />
                            <Setter TargetName="ToolBarThumb" Property="Padding" Value="5,6,6,1" />
                            <Setter TargetName="ToolBarHeader" Property="Margin" Value="0,0,0,4" />
                            <Setter TargetName="PART_ToolBarPanel" Property="Margin" Value="1,0,2,2" />
                            <Setter TargetName="ToolBarThumb" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="ToolBarHeader" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="OverflowGrid" Property="HorizontalAlignment" Value="Stretch" />
                            <Setter TargetName="OverflowGrid" Property="VerticalAlignment" Value="Bottom" />
                            <Setter TargetName="OverflowPopup" Property="Placement" Value="Right" />
                            <Setter TargetName="MainPanelBorder" Property="Margin" Value="0,0,0,11" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource DisabledBrush}" />
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource DisabledForeground}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Frame  -->
    <Style x:Key="FrameButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Command" Value="NavigationCommands.BrowseBack" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimation Duration="0:0:0.3"
                                             Storyboard.TargetName="Rect"
                                             Storyboard.TargetProperty="(UIElement.Opacity)"
                                             To="1" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimation Duration="0:0:0.3"
                                             Storyboard.TargetName="Rect"
                                             Storyboard.TargetProperty="(UIElement.Opacity)"
                                             To="0" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Rectangle x:Name="Rect"
                                   Width="24"
                                   Height="24"
                                   Fill="{StaticResource ControlLightBackground}"
                                   Opacity="0"
                                   RadiusX="2"
                                   RadiusY="2" />
                        <Path x:Name="Arrow"
                              Margin="0,0,1,0"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="M 0 8 L 7 15 L 7 10 L 16 10 L 16 6 L 7 6 L 7 1 Z"
                              Fill="{StaticResource ControlForeground}"
                              StrokeLineJoin="Round" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Command" Value="{x:Static NavigationCommands.BrowseForward}">
                            <Setter TargetName="Arrow" Property="Data" Value="M 16 8 L 9 1 L 9 10 L 0 10 L 0 6 L 9 6 L 9 15 Z" />
                            <Setter TargetName="Arrow" Property="Margin" Value="1,0,0,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Rect" Property="Fill" Value="{StaticResource PressedBackgroundButtonFrame}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Rect" Property="Opacity" Value="0" />
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DisabledArrowFrame}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FrameMenu" TargetType="{x:Type Menu}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="IsMainMenu" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <DockPanel IsItemsHost="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FrameHeaderMenuItem" TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimation Duration="0:0:0.3"
                                             Storyboard.TargetName="Bg"
                                             Storyboard.TargetProperty="(UIElement.Opacity)"
                                             To="1" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimation Duration="0:0:0.3"
                                             Storyboard.TargetName="Bg"
                                             Storyboard.TargetProperty="(UIElement.Opacity)"
                                             To="0" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Popup x:Name="PART_Popup"
                               AllowsTransparency="True"
                               Focusable="False"
                               IsOpen="{TemplateBinding IsSubmenuOpen}"
                               Placement="Bottom"
                               PopupAnimation="Scroll"
                               VerticalOffset="2">
                            <Border Name="SubMenuBorder"
                                    Background="{StaticResource ControlLightBackground}"
                                    BorderBrush="{StaticResource ControlBorderBrush}"
                                    BorderThickness="1">
                                <StackPanel Margin="2"
                                            IsItemsHost="True"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            KeyboardNavigation.TabNavigation="Cycle" />
                            </Border>
                        </Popup>
                        <Grid x:Name="Panel"
                              Width="24"
                              HorizontalAlignment="Right"
                              Background="Transparent">
                            <Border Name="Bg"
                                    Background="{StaticResource ControlLightBackground}"
                                    CornerRadius="2"
                                    Opacity="0" />
                            <Path x:Name="Arrow"
                                  Margin="0,2,4,0"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Center"
                                  Data="M 0 0 L 4 4 L 8 0 Z"
                                  Fill="{StaticResource ControlForeground}"
                                  SnapsToDevicePixels="False"
                                  StrokeLineJoin="Round" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsSubmenuOpen" Value="True">
                            <Setter TargetName="Panel" Property="Background" Value="{StaticResource PressedBackgroundButtonFrame}" />
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource ControlForegroundWhite}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DisabledArrowFrame}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FrameSubmenuItem" TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Header" Value="{Binding Path=(JournalEntry.Name)}" />
        <Setter Property="Command" Value="NavigationCommands.NavigateJournal" />
        <Setter Property="CommandTarget" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Menu}}, Path=TemplatedParent}" />
        <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}}" />
        <Setter Property="JournalEntryUnifiedViewConverter.JournalEntryPosition" Value="{Binding (JournalEntryUnifiedViewConverter.JournalEntryPosition)}" />
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimation Duration="0:0:0.3"
                                             Storyboard.TargetName="hover"
                                             Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                             To="1" />
                            <ColorAnimation Duration="0:0:0.4"
                                            Storyboard.TargetName="content"
                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForeground}" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimation Duration="0:0:0.3"
                                             Storyboard.TargetName="hover"
                                             Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                             To="0" />
                            <ColorAnimation Duration="0:0:0.4"
                                            Storyboard.TargetName="content"
                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForegroundWhite}" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Name="Panel"
                          Background="Transparent"
                          SnapsToDevicePixels="True">
                        <Border x:Name="hover" Opacity="0">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Offset="0" Color="{StaticResource HighlightComboBoxItem1}" />
                                    <GradientStop Offset="1" Color="{StaticResource HighlightComboBoxItem2}" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Path Name="Check"
                              Width="10"
                              Height="10"
                              Margin="7,5"
                              HorizontalAlignment="Left"
                              SnapsToDevicePixels="False"
                              Stroke="{StaticResource ControlForegroundWhite}"
                              StrokeEndLineCap="Triangle"
                              StrokeStartLineCap="Triangle"
                              StrokeThickness="2" />
                        <ContentPresenter x:Name="content"
                                          Margin="24,5,50,5"
                                          ContentSource="Header" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="JournalEntryUnifiedViewConverter.JournalEntryPosition" Value="Current">
                            <Setter TargetName="Check" Property="Data" Value="M 0,5 L 2.5,8 L 7,3 " />
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                            <Setter TargetName="Check" Property="Stroke" Value="{StaticResource ControlForeground}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="MenuItem.IsHighlighted" Value="True" />
                                <Condition Property="JournalEntryUnifiedViewConverter.JournalEntryPosition" Value="Forward" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Check" Property="Data" Value="M 3 1 L 7 5 L 3 9 z" />
                            <Setter TargetName="Check" Property="Fill" Value="{StaticResource ControlForeground}" />
                            <Setter TargetName="Check" Property="Stroke" Value="{x:Null}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="MenuItem.IsHighlighted" Value="True" />
                                <Condition Property="JournalEntryUnifiedViewConverter.JournalEntryPosition" Value="Back" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Check" Property="Data" Value="M 7 1 L 3 5 L 7 9 z" />
                            <Setter TargetName="Check" Property="Fill" Value="{StaticResource ControlForeground}" />
                            <Setter TargetName="Check" Property="Stroke" Value="{x:Null}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <JournalEntryUnifiedViewConverter x:Key="JournalEntryUnifiedViewConverter" />

    <Style TargetType="{x:Type Frame}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="{StaticResource ControlLightBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Frame}">
                    <Border Background="Transparent"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2">
                        <DockPanel>
                            <Grid x:Name="grid"
                                  Height="28"
                                  Background="{StaticResource ControlBackgroundNormal}"
                                  DockPanel.Dock="Top">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="16" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Button Grid.Column="0"
                                        Margin="2,0,0,0"
                                        Command="NavigationCommands.BrowseBack"
                                        Style="{StaticResource FrameButtonStyle}" />
                                <Button Grid.Column="1"
                                        Margin="2,0,0,0"
                                        Command="NavigationCommands.BrowseForward"
                                        Style="{StaticResource FrameButtonStyle}" />
                                <Menu Name="NavMenu"
                                      Grid.Column="2"
                                      Height="16"
                                      Margin="1,0,0,0"
                                      VerticalAlignment="Center"
                                      Style="{StaticResource FrameMenu}">
                                    <MenuItem IsSubmenuOpen="{Binding Path=(MenuItem.IsSubmenuOpen),
                                                                      Mode=TwoWay,
                                                                      RelativeSource={RelativeSource TemplatedParent}}"
                                              ItemContainerStyle="{StaticResource FrameSubmenuItem}"
                                              Style="{StaticResource FrameHeaderMenuItem}">
                                        <MenuItem.ItemsSource>
                                            <MultiBinding Converter="{StaticResource JournalEntryUnifiedViewConverter}">
                                                <MultiBinding.Bindings>
                                                    <Binding Path="BackStack" RelativeSource="{RelativeSource TemplatedParent}" />
                                                    <Binding Path="ForwardStack" RelativeSource="{RelativeSource TemplatedParent}" />
                                                </MultiBinding.Bindings>
                                            </MultiBinding>
                                        </MenuItem.ItemsSource>
                                    </MenuItem>
                                </Menu>
                            </Grid>
                            <Grid>
                                <Border Background="{TemplateBinding Background}" />
                                <ContentPresenter x:Name="PART_FrameCP" />
                            </Grid>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="CanGoForward" Value="False" />
                                <Condition Property="CanGoBack" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="NavMenu" Property="IsEnabled" Value="False" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".7" />
                            <Setter TargetName="grid" Property="Background" Value="{StaticResource DisabledBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  NavigationWindow  -->
    <Style x:Key="NavigationWindowButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Command" Value="NavigationCommands.BrowseBack" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimation Duration="0:0:0.3"
                                             Storyboard.TargetName="Rect"
                                             Storyboard.TargetProperty="(UIElement.Opacity)"
                                             To="1" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimation Duration="0:0:0.3"
                                             Storyboard.TargetName="Rect"
                                             Storyboard.TargetProperty="(UIElement.Opacity)"
                                             To="0" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Rectangle x:Name="Rect"
                                   Width="24"
                                   Height="24"
                                   Fill="{StaticResource ControlLightBackground}"
                                   Opacity="0"
                                   RadiusX="2"
                                   RadiusY="2" />
                        <Path x:Name="Arrow"
                              Margin="0,0,1,0"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="M 0 8 L 7 15 L 7 10 L 16 10 L 16 6 L 7 6 L 7 1 Z"
                              Fill="{StaticResource ControlForeground}"
                              StrokeLineJoin="Round" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Command" Value="{x:Static NavigationCommands.BrowseForward}">
                            <Setter TargetName="Arrow" Property="Data" Value="M 16 8 L 9 1 L 9 10 L 0 10 L 0 6 L 9 6 L 9 15 Z" />
                            <Setter TargetName="Arrow" Property="Margin" Value="1,0,0,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Rect" Property="Fill" Value="{StaticResource PressedBackgroundButtonFrame}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Rect" Property="Opacity" Value="0" />
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DisabledArrowFrame}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavigationWindowMenu" TargetType="{x:Type Menu}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="IsMainMenu" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <DockPanel IsItemsHost="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavigationWindowHeaderMenuItem" TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimation Duration="0:0:0.3"
                                             Storyboard.TargetName="Bg"
                                             Storyboard.TargetProperty="(UIElement.Opacity)"
                                             To="1" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimation Duration="0:0:0.3"
                                             Storyboard.TargetName="Bg"
                                             Storyboard.TargetProperty="(UIElement.Opacity)"
                                             To="0" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Popup x:Name="PART_Popup"
                               AllowsTransparency="True"
                               Focusable="False"
                               IsOpen="{TemplateBinding IsSubmenuOpen}"
                               Placement="Bottom"
                               PopupAnimation="Scroll"
                               VerticalOffset="2">
                            <Border Name="SubMenuBorder"
                                    Background="{StaticResource ControlLightBackground}"
                                    BorderBrush="{StaticResource ControlBorderBrush}"
                                    BorderThickness="1">
                                <StackPanel Margin="2"
                                            IsItemsHost="True"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            KeyboardNavigation.TabNavigation="Cycle" />
                            </Border>
                        </Popup>
                        <Grid x:Name="Panel"
                              Width="24"
                              HorizontalAlignment="Right"
                              Background="Transparent">
                            <Border Name="Bg"
                                    Background="{StaticResource ControlLightBackground}"
                                    CornerRadius="2"
                                    Opacity="0" />
                            <Path x:Name="Arrow"
                                  Margin="0,2,4,0"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Center"
                                  Data="M 0 0 L 4 4 L 8 0 Z"
                                  Fill="{StaticResource ControlForeground}"
                                  SnapsToDevicePixels="False"
                                  StrokeLineJoin="Round" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsSubmenuOpen" Value="True">
                            <Setter TargetName="Panel" Property="Background" Value="{StaticResource PressedBackgroundButtonFrame}" />
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource ControlForegroundWhite}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DisabledArrowFrame}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavigationWindowSubmenuItem" TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Header" Value="{Binding Path=(JournalEntry.Name)}" />
        <Setter Property="Command" Value="NavigationCommands.NavigateJournal" />
        <Setter Property="CommandTarget" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Menu}}, Path=TemplatedParent}" />
        <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}}" />
        <Setter Property="JournalEntryUnifiedViewConverter.JournalEntryPosition" Value="{Binding (JournalEntryUnifiedViewConverter.JournalEntryPosition)}" />
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimation Duration="0:0:0.3"
                                             Storyboard.TargetName="hover"
                                             Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                             To="1" />
                            <ColorAnimation Duration="0:0:0.4"
                                            Storyboard.TargetName="content"
                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForeground}" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimation Duration="0:0:0.3"
                                             Storyboard.TargetName="hover"
                                             Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                             To="0" />
                            <ColorAnimation Duration="0:0:0.4"
                                            Storyboard.TargetName="content"
                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForegroundWhite}" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Name="Panel"
                          Background="Transparent"
                          SnapsToDevicePixels="True">
                        <Border x:Name="hover" Opacity="0">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Offset="0" Color="{StaticResource HighlightComboBoxItem1}" />
                                    <GradientStop Offset="1" Color="{StaticResource HighlightComboBoxItem2}" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Path Name="Check"
                              Width="10"
                              Height="10"
                              Margin="7,5"
                              HorizontalAlignment="Left"
                              SnapsToDevicePixels="False"
                              Stroke="{StaticResource ControlForegroundWhite}"
                              StrokeEndLineCap="Triangle"
                              StrokeStartLineCap="Triangle"
                              StrokeThickness="2" />
                        <ContentPresenter x:Name="content"
                                          Margin="24,5,50,5"
                                          ContentSource="Header" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="JournalEntryUnifiedViewConverter.JournalEntryPosition" Value="Current">
                            <Setter TargetName="Check" Property="Data" Value="M 0,5 L 2.5,8 L 7,3 " />
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                            <Setter TargetName="Check" Property="Stroke" Value="{StaticResource ControlForeground}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="MenuItem.IsHighlighted" Value="True" />
                                <Condition Property="JournalEntryUnifiedViewConverter.JournalEntryPosition" Value="Forward" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Check" Property="Data" Value="M 3 1 L 7 5 L 3 9 z" />
                            <Setter TargetName="Check" Property="Fill" Value="{StaticResource ControlForeground}" />
                            <Setter TargetName="Check" Property="Stroke" Value="{x:Null}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="MenuItem.IsHighlighted" Value="True" />
                                <Condition Property="JournalEntryUnifiedViewConverter.JournalEntryPosition" Value="Back" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Check" Property="Data" Value="M 7 1 L 3 5 L 7 9 z" />
                            <Setter TargetName="Check" Property="Fill" Value="{StaticResource ControlForeground}" />
                            <Setter TargetName="Check" Property="Stroke" Value="{x:Null}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <JournalEntryUnifiedViewConverter x:Key="JournalEntryUnifiedViewConverterNavigationWindow" />

    <Style TargetType="{x:Type NavigationWindow}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="{StaticResource ControlLightBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type NavigationWindow}">
                    <Border Background="Transparent"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2">
                        <DockPanel>
                            <Grid x:Name="grid"
                                  Height="28"
                                  Background="{StaticResource ControlBackgroundNormal}"
                                  DockPanel.Dock="Top">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="16" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Button Grid.Column="0"
                                        Margin="2,0,0,0"
                                        Command="NavigationCommands.BrowseBack"
                                        Style="{StaticResource FrameButtonStyle}" />
                                <Button Grid.Column="1"
                                        Margin="2,0,0,0"
                                        Command="NavigationCommands.BrowseForward"
                                        Style="{StaticResource FrameButtonStyle}" />
                                <Menu Name="NavMenu"
                                      Grid.Column="2"
                                      Height="16"
                                      Margin="1,0,0,0"
                                      VerticalAlignment="Center"
                                      Style="{StaticResource FrameMenu}">
                                    <MenuItem IsSubmenuOpen="{Binding Path=(MenuItem.IsSubmenuOpen),
                                                                      Mode=TwoWay,
                                                                      RelativeSource={RelativeSource TemplatedParent}}"
                                              ItemContainerStyle="{StaticResource FrameSubmenuItem}"
                                              Style="{StaticResource FrameHeaderMenuItem}">
                                        <MenuItem.ItemsSource>
                                            <MultiBinding Converter="{StaticResource JournalEntryUnifiedViewConverterNavigationWindow}">
                                                <MultiBinding.Bindings>
                                                    <Binding Path="BackStack" RelativeSource="{RelativeSource TemplatedParent}" />
                                                    <Binding Path="ForwardStack" RelativeSource="{RelativeSource TemplatedParent}" />
                                                </MultiBinding.Bindings>
                                            </MultiBinding>
                                        </MenuItem.ItemsSource>
                                    </MenuItem>
                                </Menu>
                            </Grid>
                            <Grid>
                                <Border Background="{TemplateBinding Background}" />
                                <AdornerDecorator>
                                    <ContentPresenter Name="PART_NavWinCP" ClipToBounds="True" />
                                </AdornerDecorator>
                                <ResizeGrip x:Name="WindowResizeGrip"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Bottom"
                                            IsTabStop="False"
                                            Visibility="Collapsed" />
                            </Grid>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="CanGoForward" Value="False" />
                                <Condition Property="CanGoBack" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="NavMenu" Property="IsEnabled" Value="False" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".7" />
                            <Setter TargetName="grid" Property="Background" Value="{StaticResource DisabledBrush}" />
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                            <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>