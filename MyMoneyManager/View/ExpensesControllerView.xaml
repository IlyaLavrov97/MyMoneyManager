<UserControl x:Class="MyMoneyManager.View.ExpensesControllerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:MyMoneyManager.View"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:models="clr-namespace:MyMoneyManager.Model.Expenses"
             xmlns:myclasses="clr-namespace:MyMoneyManager.ViewModel.ClassesForVM"
             xmlns:viewmodels="clr-namespace:MyMoneyManager.ViewModel"
             xmlns:workers="clr-namespace:MyMoneyManager.Workers"
             d:DesignHeight="700"
             d:DesignWidth="1000"
             mc:Ignorable="d">

    <UserControl.DataContext>
        <viewmodels:ExpensesControllerViewModel />
    </UserControl.DataContext>

    <UserControl.Resources>
        <myclasses:BoolToVisibilityConverter x:Key="BoolToHiddenConverter"
                                             FalseValue="Hidden"
                                             TrueValue="Visible" />

        <ObjectDataProvider x:Key="ExchangeRate"
                            MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="workers:ExchangeRateEnum" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="ExpensesTypeEnum"
                            MethodName="GetValuesAndDescriptions"
                            ObjectType="workers:EnumWorker">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="models:ExpensesType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="70" />
            <RowDefinition Height="*" />
            <RowDefinition Height="60" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.5*" />
            <ColumnDefinition Width="0.5*" />
        </Grid.ColumnDefinitions>
        <CheckBox x:Name="checkBox"
                  Width="207"
                  Height="16"
                  Margin="10,10,0,0"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Top"
                  Content="Учитывать период при поиске"
                  IsChecked="{Binding Path=IsDateConsider,
                                      Mode=TwoWay,
                                      UpdateSourceTrigger=PropertyChanged}" />
        <ComboBox x:Name="comboBox"
                  Width="130"
                  Margin="87,0,0,10"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Bottom"
                  DisplayMemberPath="Description"
                  ItemsSource="{Binding Source={StaticResource ExpensesTypeEnum}}"
                  SelectedValue="{Binding Path=SelectedExpensesType,
                                          Mode=TwoWay}"
                  SelectedValuePath="Value"
                  Text="Any" />

        <TextBlock x:Name="typeTB"
                   Margin="10,0,0,17"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Bottom"
                   Text="Тип затраты :"
                   TextWrapping="Wrap" />
        <TabControl x:Name="chartTabControl"
                    Grid.RowSpan="2"
                    Grid.Column="1"
                    Margin="10,10,10,80"
                    TabStripPlacement="Top">
            <TabItem Header="Линейная диаграмма"
                     IsSelected="{Binding Path=IsLineChartConsider,
                                          Mode=TwoWay,
                                          UpdateSourceTrigger=PropertyChanged}"
                     Visibility="{Binding Path=IsLineChartConsider,
                                          Converter={StaticResource BoolToHiddenConverter}}">
                <Grid Background="#FF494949">
                    <local:LineChartView />
                </Grid>
            </TabItem>
            <TabItem Header="Круговая диаграмма"
                     IsSelected="{Binding Path=IsPieChartConsider,
                                          Mode=TwoWay,
                                          UpdateSourceTrigger=PropertyChanged}"
                     Visibility="{Binding Path=IsPieChartConsider,
                                          Converter={StaticResource BoolToHiddenConverter}}">
                <Grid Background="#FF494949">
                    <local:PieChartView />
                </Grid>
            </TabItem>
            <TabItem Header="{Binding Path=TabItemName,
                                      Mode=TwoWay}"
                     IsSelected="{Binding Path=DisplayXamlTab,
                                          Mode=TwoWay,
                                          UpdateSourceTrigger=PropertyChanged}"
                     Visibility="{Binding Path=TabVisibility,
                                          Converter={StaticResource BoolToHiddenConverter}}">
                <local:AddOrEditExpensesView />
            </TabItem>

        </TabControl>
        <TextBox x:Name="placeHolder"
                 Grid.Row="0"
                 Grid.Column="0"
                 Height="Auto"
                 Margin="222,20,16,20"
                 Text="{Binding Path=SearchStringContent,
                                Mode=TwoWay,
                                UpdateSourceTrigger=PropertyChanged}"
                 TextWrapping="Wrap" />
        <TextBlock x:Name="info1TextBlock"
                   Grid.Row="1"
                   Height="16"
                   Margin="10,0,0,18"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Bottom"
                   Text="Искать в диапозоне от"
                   TextWrapping="Wrap" />
        <TextBox x:Name="diap1TextBox"
                 Grid.Row="1"
                 Width="50"
                 Height="28"
                 Margin="140,0,0,10"
                 HorizontalAlignment="Left"
                 VerticalAlignment="Bottom"
                 Text="{Binding Path=ExpensesDiap1,
                                Mode=TwoWay,
                                UpdateSourceTrigger=PropertyChanged}"
                 TextWrapping="Wrap" />
        <TextBox x:Name="diap2TextBox"
                 Grid.Row="1"
                 Width="50"
                 Height="28"
                 Margin="218,0,0,10"
                 HorizontalAlignment="Left"
                 VerticalAlignment="Bottom"
                 Text="{Binding Path=ExpensesDiap2,
                                Mode=TwoWay,
                                UpdateSourceTrigger=PropertyChanged}"
                 TextWrapping="Wrap" />
        <TextBlock x:Name="info2TextBlock"
                   Grid.Row="1"
                   Width="21"
                   Height="17"
                   Margin="197,0,0,18"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Bottom"
                   Text="до"
                   TextWrapping="Wrap" />
        <ComboBox Grid.Row="1"
                  Width="97"
                  Height="28"
                  Margin="282,0,0,9"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Bottom"
                  ItemsSource="{Binding Source={StaticResource ExchangeRate}}"
                  SelectedValue="{Binding Path=SelectedExchangeRate,
                                          Mode=TwoWay}"
                  Text="{Binding Path=SelectedExchangeRate,
                                 Mode=TwoWay}" />

        <ScrollViewer Grid.Row="1"
                      Grid.Column="0"
                      Margin="10,10,10,48">
            <Grid>
                <DataGrid x:Name="dataGrid"
                          AutoGenerateColumns="False"
                          IsReadOnly="True"
                          ItemsSource="{Binding ExpensesInfos,
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{Binding Path=SelectedExpensesInfo,
                                                 UpdateSourceTrigger=PropertyChanged,
                                                 Mode=TwoWay}"
                          SelectionMode="Extended"
                          SelectionUnit="FullRow">
                    <DataGrid.Columns>

                        <DataGridTextColumn Width="0.2*"
                                            Binding="{Binding Expenditure}"
                                            Header="Размер" />

                        <DataGridTextColumn Width="0.4*"
                                            Binding="{Binding ExpensesType}"
                                            Header="Тип затраты" />

                        <DataGridTextColumn Width="0.3*"
                                            Binding="{Binding CostsDate,
                                                              UpdateSourceTrigger=PropertyChanged}"
                                            Header="Дата" />

                        <DataGridTextColumn Width="0.3*"
                                            Binding="{Binding Comment}"
                                            Header="Коментарий" />

                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </ScrollViewer>
        <DatePicker Grid.Row="1"
                    Grid.Column="1"
                    Width="117"
                    Height="24"
                    Margin="111,0,0,14"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Bottom"
                    SelectedDate="{Binding Path=ToExpensesDate,
                                           Mode=TwoWay,
                                           TargetNullValue={x:Static System:DateTime.Now}}" />
        <DatePicker Grid.Row="1"
                    Grid.Column="1"
                    Width="117"
                    Height="24"
                    Margin="111,0,0,45"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Bottom"
                    SelectedDate="{Binding Path=FromExpensesDate,
                                           Mode=TwoWay,
                                           TargetNullValue={x:Static System:DateTime.Now}}" />
        <TextBlock x:Name="textBlock_Copy"
                   Grid.Row="1"
                   Grid.Column="1"
                   Height="16"
                   Margin="10,0,0,48"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Bottom"
                   Text="Начало периода"
                   TextWrapping="Wrap" />
        <TextBlock x:Name="textBlock_Copy4"
                   Grid.Row="1"
                   Grid.Column="1"
                   Height="16"
                   Margin="10,0,0,18"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Bottom"
                   Text="Конец периода"
                   TextWrapping="Wrap" />
        <CheckBox x:Name="checkBox1"
                  Grid.Row="1"
                  Grid.Column="1"
                  Width="169"
                  Height="16"
                  Margin="0,0,10,48"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Bottom"
                  Content="Линейная диаграмма"
                  IsChecked="{Binding Path=IsLineChartConsider,
                                      Mode=TwoWay,
                                      UpdateSourceTrigger=PropertyChanged}" />
        <CheckBox x:Name="checkBox2"
                  Grid.Row="1"
                  Grid.Column="1"
                  Width="169"
                  Height="16"
                  Margin="0,0,10,14"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Bottom"
                  Content="Круговая диаграмма"
                  IsChecked="{Binding Path=IsPieChartConsider,
                                      Mode=TwoWay,
                                      UpdateSourceTrigger=PropertyChanged}" />
        <Button x:Name="changeBut"
                Grid.Row="2"
                Width="89"
                Height="20"
                Margin="91,20,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Command="{Binding Path=EditCommand}"
                Content="Редактировать" />
        <Button x:Name="addBut"
                Grid.Row="2"
                Width="76"
                Margin="10,20,0,20"
                HorizontalAlignment="Left"
                Command="{Binding Path=AddCommand}"
                Content="Добавить" />
        <Button x:Name="removeBut"
                Grid.Row="2"
                Width="75"
                Margin="0,20,10,20"
                HorizontalAlignment="Right"
                Command="{Binding Path=DeleteCommand}"
                Content="Удалить" />
        <Button x:Name="button"
                Grid.Row="2"
                Width="75"
                Height="20"
                Margin="185,0,0,20"
                HorizontalAlignment="Left"
                VerticalAlignment="Bottom"
                Command="{Binding Path=SaveCommand}"
                Content="Сохранить" />
        <Expander x:Name="infoExpander"
                  Grid.Row="2"
                  Grid.Column="1"
                  Margin="10"
                  ExpandDirection="Right"
                  Header="Коментарий затраты"
                  IsExpanded="{Binding Path=IsExpanded}">

            <TextBlock Text="{Binding Path=SelectedItemComment, Mode=TwoWay}" TextWrapping="Wrap" />

        </Expander>


    </Grid>
</UserControl>
